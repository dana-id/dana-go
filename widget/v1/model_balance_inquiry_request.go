// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package widget

/*
Widget API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the BalanceInquiryRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BalanceInquiryRequest{}

// BalanceInquiryRequest struct for BalanceInquiryRequest
type BalanceInquiryRequest struct {
	// Unique transaction identifier on partner system which assigned to each transaction<br> Notes:<br> If the partner receives a timeout or an unexpected response from DANA and partner expects to perform retry request to DANA, please use the partnerReferenceNo that is the same as the one used in the transaction request process before 
	PartnerReferenceNo *string `json:"partnerReferenceNo,omitempty"`
	// Information of balance types to specify which balance type expected to be returned. Will return all available balance type if this parameter empty
	BalanceTypes []string `json:"balanceTypes,omitempty"`
	// Additional information
	AdditionalInfo BalanceInquiryRequestAdditionalInfo `json:"additionalInfo"`
}

type _BalanceInquiryRequest BalanceInquiryRequest

// NewBalanceInquiryRequest instantiates a new BalanceInquiryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceInquiryRequest(additionalInfo BalanceInquiryRequestAdditionalInfo) *BalanceInquiryRequest {
	this := BalanceInquiryRequest{}
	this.AdditionalInfo = additionalInfo
	return &this
}

// NewBalanceInquiryRequestWithDefaults instantiates a new BalanceInquiryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceInquiryRequestWithDefaults() *BalanceInquiryRequest {
	this := BalanceInquiryRequest{}
	return &this
}

// GetPartnerReferenceNo returns the PartnerReferenceNo field value if set, zero value otherwise.
func (o *BalanceInquiryRequest) GetPartnerReferenceNo() string {
	if o == nil || utils.IsNil(o.PartnerReferenceNo) {
		var ret string
		return ret
	}
	return *o.PartnerReferenceNo
}

// GetPartnerReferenceNoOk returns a tuple with the PartnerReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceInquiryRequest) GetPartnerReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PartnerReferenceNo) {
		return nil, false
	}
	return o.PartnerReferenceNo, true
}

// HasPartnerReferenceNo returns a boolean if a field has been set.
func (o *BalanceInquiryRequest) HasPartnerReferenceNo() bool {
	if o != nil && !utils.IsNil(o.PartnerReferenceNo) {
		return true
	}

	return false
}

// SetPartnerReferenceNo gets a reference to the given string and assigns it to the PartnerReferenceNo field.
func (o *BalanceInquiryRequest) SetPartnerReferenceNo(v string) {
	o.PartnerReferenceNo = &v
}

// GetBalanceTypes returns the BalanceTypes field value if set, zero value otherwise.
func (o *BalanceInquiryRequest) GetBalanceTypes() []string {
	if o == nil || utils.IsNil(o.BalanceTypes) {
		var ret []string
		return ret
	}
	return o.BalanceTypes
}

// GetBalanceTypesOk returns a tuple with the BalanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceInquiryRequest) GetBalanceTypesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.BalanceTypes) {
		return nil, false
	}
	return o.BalanceTypes, true
}

// HasBalanceTypes returns a boolean if a field has been set.
func (o *BalanceInquiryRequest) HasBalanceTypes() bool {
	if o != nil && !utils.IsNil(o.BalanceTypes) {
		return true
	}

	return false
}

// SetBalanceTypes gets a reference to the given []string and assigns it to the BalanceTypes field.
func (o *BalanceInquiryRequest) SetBalanceTypes(v []string) {
	o.BalanceTypes = v
}

// GetAdditionalInfo returns the AdditionalInfo field value
func (o *BalanceInquiryRequest) GetAdditionalInfo() BalanceInquiryRequestAdditionalInfo {
	if o == nil {
		var ret BalanceInquiryRequestAdditionalInfo
		return ret
	}

	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value
// and a boolean to check if the value has been set.
func (o *BalanceInquiryRequest) GetAdditionalInfoOk() (*BalanceInquiryRequestAdditionalInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalInfo, true
}

// SetAdditionalInfo sets field value
func (o *BalanceInquiryRequest) SetAdditionalInfo(v BalanceInquiryRequestAdditionalInfo) {
	o.AdditionalInfo = v
}

func (o BalanceInquiryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceInquiryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PartnerReferenceNo) {
		toSerialize["partnerReferenceNo"] = o.PartnerReferenceNo
	}
	if !utils.IsNil(o.BalanceTypes) {
		toSerialize["balanceTypes"] = o.BalanceTypes
	}
	toSerialize["additionalInfo"] = o.AdditionalInfo
	return toSerialize, nil
}

func (o *BalanceInquiryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"additionalInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBalanceInquiryRequest := _BalanceInquiryRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBalanceInquiryRequest)

	if err != nil {
		return err
	}

	*o = BalanceInquiryRequest(varBalanceInquiryRequest)

	return err
}

type NullableBalanceInquiryRequest struct {
	value *BalanceInquiryRequest
	isSet bool
}

func (v NullableBalanceInquiryRequest) Get() *BalanceInquiryRequest {
	return v.value
}

func (v *NullableBalanceInquiryRequest) Set(val *BalanceInquiryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceInquiryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceInquiryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceInquiryRequest(val *BalanceInquiryRequest) *NullableBalanceInquiryRequest {
	return &NullableBalanceInquiryRequest{value: val, isSet: true}
}

func (v NullableBalanceInquiryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceInquiryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


