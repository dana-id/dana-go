// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package widget

/*
Widget API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the WidgetPaymentRequestAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &WidgetPaymentRequestAdditionalInfo{}

// WidgetPaymentRequestAdditionalInfo struct for WidgetPaymentRequestAdditionalInfo
type WidgetPaymentRequestAdditionalInfo struct {
	// Additional information of deeplink checkout URL. For Mini Program, DANA will treat as false
	SupportDeepLinkCheckoutUrl *string `json:"supportDeepLinkCheckoutUrl,omitempty"`
	// Additional information of user's phone number
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Additional information of public user's identifier
	PublicUserId *string `json:"publicUserId,omitempty"`
	// Additional information of product code
	ProductCode string `json:"productCode"`
	ServiceInfo *ServiceInfo `json:"serviceInfo,omitempty"`
	Order Order `json:"order"`
	// Additional information of merchant category code. This parameter is used to identify the type of business in which a merchant is engaged.
	Mcc string `json:"mcc"`
	EnvInfo EnvInfo `json:"envInfo"`
	// Additional information of extend
	ExtendInfo *string `json:"extendInfo,omitempty"`
}

type _WidgetPaymentRequestAdditionalInfo WidgetPaymentRequestAdditionalInfo

// NewWidgetPaymentRequestAdditionalInfo instantiates a new WidgetPaymentRequestAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetPaymentRequestAdditionalInfo(productCode string, order Order, mcc string, envInfo EnvInfo) *WidgetPaymentRequestAdditionalInfo {
	this := WidgetPaymentRequestAdditionalInfo{}
	this.ProductCode = productCode
	this.Order = order
	this.Mcc = mcc
	this.EnvInfo = envInfo
	return &this
}

// NewWidgetPaymentRequestAdditionalInfoWithDefaults instantiates a new WidgetPaymentRequestAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetPaymentRequestAdditionalInfoWithDefaults() *WidgetPaymentRequestAdditionalInfo {
	this := WidgetPaymentRequestAdditionalInfo{}
	return &this
}

// GetSupportDeepLinkCheckoutUrl returns the SupportDeepLinkCheckoutUrl field value if set, zero value otherwise.
func (o *WidgetPaymentRequestAdditionalInfo) GetSupportDeepLinkCheckoutUrl() string {
	if o == nil || utils.IsNil(o.SupportDeepLinkCheckoutUrl) {
		var ret string
		return ret
	}
	return *o.SupportDeepLinkCheckoutUrl
}

// GetSupportDeepLinkCheckoutUrlOk returns a tuple with the SupportDeepLinkCheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetSupportDeepLinkCheckoutUrlOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SupportDeepLinkCheckoutUrl) {
		return nil, false
	}
	return o.SupportDeepLinkCheckoutUrl, true
}

// HasSupportDeepLinkCheckoutUrl returns a boolean if a field has been set.
func (o *WidgetPaymentRequestAdditionalInfo) HasSupportDeepLinkCheckoutUrl() bool {
	if o != nil && !utils.IsNil(o.SupportDeepLinkCheckoutUrl) {
		return true
	}

	return false
}

// SetSupportDeepLinkCheckoutUrl gets a reference to the given string and assigns it to the SupportDeepLinkCheckoutUrl field.
func (o *WidgetPaymentRequestAdditionalInfo) SetSupportDeepLinkCheckoutUrl(v string) {
	o.SupportDeepLinkCheckoutUrl = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *WidgetPaymentRequestAdditionalInfo) GetPhoneNumber() string {
	if o == nil || utils.IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *WidgetPaymentRequestAdditionalInfo) HasPhoneNumber() bool {
	if o != nil && !utils.IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *WidgetPaymentRequestAdditionalInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPublicUserId returns the PublicUserId field value if set, zero value otherwise.
func (o *WidgetPaymentRequestAdditionalInfo) GetPublicUserId() string {
	if o == nil || utils.IsNil(o.PublicUserId) {
		var ret string
		return ret
	}
	return *o.PublicUserId
}

// GetPublicUserIdOk returns a tuple with the PublicUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetPublicUserIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PublicUserId) {
		return nil, false
	}
	return o.PublicUserId, true
}

// HasPublicUserId returns a boolean if a field has been set.
func (o *WidgetPaymentRequestAdditionalInfo) HasPublicUserId() bool {
	if o != nil && !utils.IsNil(o.PublicUserId) {
		return true
	}

	return false
}

// SetPublicUserId gets a reference to the given string and assigns it to the PublicUserId field.
func (o *WidgetPaymentRequestAdditionalInfo) SetPublicUserId(v string) {
	o.PublicUserId = &v
}

// GetProductCode returns the ProductCode field value
func (o *WidgetPaymentRequestAdditionalInfo) GetProductCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetProductCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductCode, true
}

// SetProductCode sets field value
func (o *WidgetPaymentRequestAdditionalInfo) SetProductCode(v string) {
	o.ProductCode = v
}

// GetServiceInfo returns the ServiceInfo field value if set, zero value otherwise.
func (o *WidgetPaymentRequestAdditionalInfo) GetServiceInfo() ServiceInfo {
	if o == nil || utils.IsNil(o.ServiceInfo) {
		var ret ServiceInfo
		return ret
	}
	return *o.ServiceInfo
}

// GetServiceInfoOk returns a tuple with the ServiceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetServiceInfoOk() (*ServiceInfo, bool) {
	if o == nil || utils.IsNil(o.ServiceInfo) {
		return nil, false
	}
	return o.ServiceInfo, true
}

// HasServiceInfo returns a boolean if a field has been set.
func (o *WidgetPaymentRequestAdditionalInfo) HasServiceInfo() bool {
	if o != nil && !utils.IsNil(o.ServiceInfo) {
		return true
	}

	return false
}

// SetServiceInfo gets a reference to the given ServiceInfo and assigns it to the ServiceInfo field.
func (o *WidgetPaymentRequestAdditionalInfo) SetServiceInfo(v ServiceInfo) {
	o.ServiceInfo = &v
}

// GetOrder returns the Order field value
func (o *WidgetPaymentRequestAdditionalInfo) GetOrder() Order {
	if o == nil {
		var ret Order
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetOrderOk() (*Order, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *WidgetPaymentRequestAdditionalInfo) SetOrder(v Order) {
	o.Order = v
}

// GetMcc returns the Mcc field value
func (o *WidgetPaymentRequestAdditionalInfo) GetMcc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetMccOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mcc, true
}

// SetMcc sets field value
func (o *WidgetPaymentRequestAdditionalInfo) SetMcc(v string) {
	o.Mcc = v
}

// GetEnvInfo returns the EnvInfo field value
func (o *WidgetPaymentRequestAdditionalInfo) GetEnvInfo() EnvInfo {
	if o == nil {
		var ret EnvInfo
		return ret
	}

	return o.EnvInfo
}

// GetEnvInfoOk returns a tuple with the EnvInfo field value
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetEnvInfoOk() (*EnvInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvInfo, true
}

// SetEnvInfo sets field value
func (o *WidgetPaymentRequestAdditionalInfo) SetEnvInfo(v EnvInfo) {
	o.EnvInfo = v
}

// GetExtendInfo returns the ExtendInfo field value if set, zero value otherwise.
func (o *WidgetPaymentRequestAdditionalInfo) GetExtendInfo() string {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		var ret string
		return ret
	}
	return *o.ExtendInfo
}

// GetExtendInfoOk returns a tuple with the ExtendInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPaymentRequestAdditionalInfo) GetExtendInfoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		return nil, false
	}
	return o.ExtendInfo, true
}

// HasExtendInfo returns a boolean if a field has been set.
func (o *WidgetPaymentRequestAdditionalInfo) HasExtendInfo() bool {
	if o != nil && !utils.IsNil(o.ExtendInfo) {
		return true
	}

	return false
}

// SetExtendInfo gets a reference to the given string and assigns it to the ExtendInfo field.
func (o *WidgetPaymentRequestAdditionalInfo) SetExtendInfo(v string) {
	o.ExtendInfo = &v
}

func (o WidgetPaymentRequestAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetPaymentRequestAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SupportDeepLinkCheckoutUrl) {
		toSerialize["supportDeepLinkCheckoutUrl"] = o.SupportDeepLinkCheckoutUrl
	}
	if !utils.IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !utils.IsNil(o.PublicUserId) {
		toSerialize["publicUserId"] = o.PublicUserId
	}
	toSerialize["productCode"] = o.ProductCode
	if !utils.IsNil(o.ServiceInfo) {
		toSerialize["serviceInfo"] = o.ServiceInfo
	}
	toSerialize["order"] = o.Order
	toSerialize["mcc"] = o.Mcc
	toSerialize["envInfo"] = o.EnvInfo
	if !utils.IsNil(o.ExtendInfo) {
		toSerialize["extendInfo"] = o.ExtendInfo
	}
	return toSerialize, nil
}

func (o *WidgetPaymentRequestAdditionalInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productCode",
		"order",
		"mcc",
		"envInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWidgetPaymentRequestAdditionalInfo := _WidgetPaymentRequestAdditionalInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWidgetPaymentRequestAdditionalInfo)

	if err != nil {
		return err
	}

	*o = WidgetPaymentRequestAdditionalInfo(varWidgetPaymentRequestAdditionalInfo)

	return err
}

type NullableWidgetPaymentRequestAdditionalInfo struct {
	value *WidgetPaymentRequestAdditionalInfo
	isSet bool
}

func (v NullableWidgetPaymentRequestAdditionalInfo) Get() *WidgetPaymentRequestAdditionalInfo {
	return v.value
}

func (v *NullableWidgetPaymentRequestAdditionalInfo) Set(val *WidgetPaymentRequestAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetPaymentRequestAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetPaymentRequestAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetPaymentRequestAdditionalInfo(val *WidgetPaymentRequestAdditionalInfo) *NullableWidgetPaymentRequestAdditionalInfo {
	return &NullableWidgetPaymentRequestAdditionalInfo{value: val, isSet: true}
}

func (v NullableWidgetPaymentRequestAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetPaymentRequestAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


