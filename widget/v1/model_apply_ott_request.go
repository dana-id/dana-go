// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package widget

/*
Widget API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the ApplyOTTRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyOTTRequest{}

// ApplyOTTRequest struct for ApplyOTTRequest
type ApplyOTTRequest struct {
	UserResources []string `json:"userResources"`
	AdditionalInfo ApplyOTTRequestAdditionalInfo `json:"additionalInfo"`
}

type _ApplyOTTRequest ApplyOTTRequest

// NewApplyOTTRequest instantiates a new ApplyOTTRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyOTTRequest(userResources []string, additionalInfo ApplyOTTRequestAdditionalInfo) *ApplyOTTRequest {
	this := ApplyOTTRequest{}
	this.UserResources = userResources
	this.AdditionalInfo = additionalInfo
	return &this
}

// NewApplyOTTRequestWithDefaults instantiates a new ApplyOTTRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyOTTRequestWithDefaults() *ApplyOTTRequest {
	this := ApplyOTTRequest{}
	return &this
}

// GetUserResources returns the UserResources field value
func (o *ApplyOTTRequest) GetUserResources() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserResources
}

// GetUserResourcesOk returns a tuple with the UserResources field value
// and a boolean to check if the value has been set.
func (o *ApplyOTTRequest) GetUserResourcesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserResources, true
}

// SetUserResources sets field value
func (o *ApplyOTTRequest) SetUserResources(v []string) {
	o.UserResources = v
}

// GetAdditionalInfo returns the AdditionalInfo field value
func (o *ApplyOTTRequest) GetAdditionalInfo() ApplyOTTRequestAdditionalInfo {
	if o == nil {
		var ret ApplyOTTRequestAdditionalInfo
		return ret
	}

	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value
// and a boolean to check if the value has been set.
func (o *ApplyOTTRequest) GetAdditionalInfoOk() (*ApplyOTTRequestAdditionalInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalInfo, true
}

// SetAdditionalInfo sets field value
func (o *ApplyOTTRequest) SetAdditionalInfo(v ApplyOTTRequestAdditionalInfo) {
	o.AdditionalInfo = v
}

func (o ApplyOTTRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyOTTRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userResources"] = o.UserResources
	toSerialize["additionalInfo"] = o.AdditionalInfo
	return toSerialize, nil
}

func (o *ApplyOTTRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userResources",
		"additionalInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplyOTTRequest := _ApplyOTTRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApplyOTTRequest)

	if err != nil {
		return err
	}

	*o = ApplyOTTRequest(varApplyOTTRequest)

	return err
}

type NullableApplyOTTRequest struct {
	value *ApplyOTTRequest
	isSet bool
}

func (v NullableApplyOTTRequest) Get() *ApplyOTTRequest {
	return v.value
}

func (v *NullableApplyOTTRequest) Set(val *ApplyOTTRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyOTTRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyOTTRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyOTTRequest(val *ApplyOTTRequest) *NullableApplyOTTRequest {
	return &NullableApplyOTTRequest{value: val, isSet: true}
}

func (v NullableApplyOTTRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyOTTRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


