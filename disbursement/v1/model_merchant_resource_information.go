// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package disbursement

/*
Disbursement API

API for doing disbursement operations in DANA, including DANA account inquiry, transfer to DANA, and transfer to bank disbursement

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the MerchantResourceInformation type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MerchantResourceInformation{}

// MerchantResourceInformation struct for MerchantResourceInformation
type MerchantResourceInformation struct {
	// Type of merchant resource
	ResourceType string `json:"resourceType"`
	// JSON string containing amount and currency information
	Value string `json:"value"`
}

type _MerchantResourceInformation MerchantResourceInformation

// NewMerchantResourceInformation instantiates a new MerchantResourceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantResourceInformation(resourceType string, value string) *MerchantResourceInformation {
	this := MerchantResourceInformation{}
	this.ResourceType = resourceType
	this.Value = value
	return &this
}

// NewMerchantResourceInformationWithDefaults instantiates a new MerchantResourceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantResourceInformationWithDefaults() *MerchantResourceInformation {
	this := MerchantResourceInformation{}
	return &this
}

// GetResourceType returns the ResourceType field value
func (o *MerchantResourceInformation) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *MerchantResourceInformation) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *MerchantResourceInformation) SetResourceType(v string) {
	o.ResourceType = v
}

// GetValue returns the Value field value
func (o *MerchantResourceInformation) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *MerchantResourceInformation) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *MerchantResourceInformation) SetValue(v string) {
	o.Value = v
}

func (o MerchantResourceInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantResourceInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceType"] = o.ResourceType
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *MerchantResourceInformation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceType",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantResourceInformation := _MerchantResourceInformation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantResourceInformation)

	if err != nil {
		return err
	}

	*o = MerchantResourceInformation(varMerchantResourceInformation)

	return err
}

type NullableMerchantResourceInformation struct {
	value *MerchantResourceInformation
	isSet bool
}

func (v NullableMerchantResourceInformation) Get() *MerchantResourceInformation {
	return v.value
}

func (v *NullableMerchantResourceInformation) Set(val *MerchantResourceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantResourceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantResourceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantResourceInformation(val *MerchantResourceInformation) *NullableMerchantResourceInformation {
	return &NullableMerchantResourceInformation{value: val, isSet: true}
}

func (v NullableMerchantResourceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantResourceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


