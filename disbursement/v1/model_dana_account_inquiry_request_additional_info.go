// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package disbursement

/*
Disbursement API

API for doing disbursement operations in DANA, including DANA account inquiry, transfer to DANA, and transfer to bank disbursement

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the DanaAccountInquiryRequestAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DanaAccountInquiryRequestAdditionalInfo{}

// DanaAccountInquiryRequestAdditionalInfo Additional information
type DanaAccountInquiryRequestAdditionalInfo struct {
	// Additional information of top up fund type, i.e.<br> AGENT_TOPUP_FOR_ 
	FundType string `json:"fundType"`
	// Additional information of external division identifier. This parameter only used for Top Up Disbursement subMerchant (fundType : AGENT_TOPUP_FOR_USER_SETTLE)<br> Notes:<br> The required of this parameter is Optional, but if \"additionalInfo.chargeTarget\" has value DIVISION then the required of this parameter will be changed to Mandatory 
	ExternalDivisionId *string `json:"externalDivisionId,omitempty"`
	// Additional information of charge target. This parameter only used for Top Up Disbursement subMerchant. The value are:<br> • null<br> • DIVISION<br> • MERCHANT<br> if the value is DIVISION, externalDivisionId will be Mandatory 
	ChargeTarget *string `json:"chargeTarget,omitempty"`
	// 1. Contains customer token, which has been obtained from binding process, refer to Account Binding & Unbinding documentation<br> 2. If request is coming from user interaction, this field is mandatory. If not, just filled customerNumber 
	AccessToken *string `json:"accessToken,omitempty"`
	// Public user identifier of DANA user<br> Notes:<br> If used, requires customerNumber to be filled with default phone number format \"620000000000\" 
	CustomerId *string `json:"customerId,omitempty"`
}

type _DanaAccountInquiryRequestAdditionalInfo DanaAccountInquiryRequestAdditionalInfo

// NewDanaAccountInquiryRequestAdditionalInfo instantiates a new DanaAccountInquiryRequestAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDanaAccountInquiryRequestAdditionalInfo(fundType string) *DanaAccountInquiryRequestAdditionalInfo {
	this := DanaAccountInquiryRequestAdditionalInfo{}
	this.FundType = fundType
	return &this
}

// NewDanaAccountInquiryRequestAdditionalInfoWithDefaults instantiates a new DanaAccountInquiryRequestAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDanaAccountInquiryRequestAdditionalInfoWithDefaults() *DanaAccountInquiryRequestAdditionalInfo {
	this := DanaAccountInquiryRequestAdditionalInfo{}
	return &this
}

// GetFundType returns the FundType field value
func (o *DanaAccountInquiryRequestAdditionalInfo) GetFundType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FundType
}

// GetFundTypeOk returns a tuple with the FundType field value
// and a boolean to check if the value has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetFundTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundType, true
}

// SetFundType sets field value
func (o *DanaAccountInquiryRequestAdditionalInfo) SetFundType(v string) {
	o.FundType = v
}

// GetExternalDivisionId returns the ExternalDivisionId field value if set, zero value otherwise.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetExternalDivisionId() string {
	if o == nil || utils.IsNil(o.ExternalDivisionId) {
		var ret string
		return ret
	}
	return *o.ExternalDivisionId
}

// GetExternalDivisionIdOk returns a tuple with the ExternalDivisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetExternalDivisionIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExternalDivisionId) {
		return nil, false
	}
	return o.ExternalDivisionId, true
}

// HasExternalDivisionId returns a boolean if a field has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) HasExternalDivisionId() bool {
	if o != nil && !utils.IsNil(o.ExternalDivisionId) {
		return true
	}

	return false
}

// SetExternalDivisionId gets a reference to the given string and assigns it to the ExternalDivisionId field.
func (o *DanaAccountInquiryRequestAdditionalInfo) SetExternalDivisionId(v string) {
	o.ExternalDivisionId = &v
}

// GetChargeTarget returns the ChargeTarget field value if set, zero value otherwise.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetChargeTarget() string {
	if o == nil || utils.IsNil(o.ChargeTarget) {
		var ret string
		return ret
	}
	return *o.ChargeTarget
}

// GetChargeTargetOk returns a tuple with the ChargeTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetChargeTargetOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ChargeTarget) {
		return nil, false
	}
	return o.ChargeTarget, true
}

// HasChargeTarget returns a boolean if a field has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) HasChargeTarget() bool {
	if o != nil && !utils.IsNil(o.ChargeTarget) {
		return true
	}

	return false
}

// SetChargeTarget gets a reference to the given string and assigns it to the ChargeTarget field.
func (o *DanaAccountInquiryRequestAdditionalInfo) SetChargeTarget(v string) {
	o.ChargeTarget = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetAccessToken() string {
	if o == nil || utils.IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetAccessTokenOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) HasAccessToken() bool {
	if o != nil && !utils.IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *DanaAccountInquiryRequestAdditionalInfo) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetCustomerId() string {
	if o == nil || utils.IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) GetCustomerIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DanaAccountInquiryRequestAdditionalInfo) HasCustomerId() bool {
	if o != nil && !utils.IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DanaAccountInquiryRequestAdditionalInfo) SetCustomerId(v string) {
	o.CustomerId = &v
}

func (o DanaAccountInquiryRequestAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DanaAccountInquiryRequestAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fundType"] = o.FundType
	if !utils.IsNil(o.ExternalDivisionId) {
		toSerialize["externalDivisionId"] = o.ExternalDivisionId
	}
	if !utils.IsNil(o.ChargeTarget) {
		toSerialize["chargeTarget"] = o.ChargeTarget
	}
	if !utils.IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !utils.IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	return toSerialize, nil
}

func (o *DanaAccountInquiryRequestAdditionalInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fundType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDanaAccountInquiryRequestAdditionalInfo := _DanaAccountInquiryRequestAdditionalInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDanaAccountInquiryRequestAdditionalInfo)

	if err != nil {
		return err
	}

	*o = DanaAccountInquiryRequestAdditionalInfo(varDanaAccountInquiryRequestAdditionalInfo)

	return err
}

type NullableDanaAccountInquiryRequestAdditionalInfo struct {
	value *DanaAccountInquiryRequestAdditionalInfo
	isSet bool
}

func (v NullableDanaAccountInquiryRequestAdditionalInfo) Get() *DanaAccountInquiryRequestAdditionalInfo {
	return v.value
}

func (v *NullableDanaAccountInquiryRequestAdditionalInfo) Set(val *DanaAccountInquiryRequestAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDanaAccountInquiryRequestAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDanaAccountInquiryRequestAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDanaAccountInquiryRequestAdditionalInfo(val *DanaAccountInquiryRequestAdditionalInfo) *NullableDanaAccountInquiryRequestAdditionalInfo {
	return &NullableDanaAccountInquiryRequestAdditionalInfo{value: val, isSet: true}
}

func (v NullableDanaAccountInquiryRequestAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDanaAccountInquiryRequestAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


