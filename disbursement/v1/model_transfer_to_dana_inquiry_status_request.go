// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package disbursement

/*
Disbursement API

API for doing disbursement operations in DANA, including DANA account inquiry, transfer to DANA, and transfer to bank disbursement

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the TransferToDanaInquiryStatusRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TransferToDanaInquiryStatusRequest{}

// TransferToDanaInquiryStatusRequest struct for TransferToDanaInquiryStatusRequest
type TransferToDanaInquiryStatusRequest struct {
	// Original transaction identifier on partner system
	OriginalPartnerReferenceNo string `json:"originalPartnerReferenceNo"`
	// Original transaction identifier on DANA system
	OriginalReferenceNo *string `json:"originalReferenceNo,omitempty"`
	// Original external identifier on header message
	OriginalExternalId *string `json:"originalExternalId,omitempty"`
	// Transaction type indicator is based on the service code of the original transaction request, value always 38
	ServiceCode string `json:"serviceCode"`
	// Additional information
	AdditionalInfo map[string]interface{} `json:"additionalInfo,omitempty"`
}

type _TransferToDanaInquiryStatusRequest TransferToDanaInquiryStatusRequest

// NewTransferToDanaInquiryStatusRequest instantiates a new TransferToDanaInquiryStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferToDanaInquiryStatusRequest(originalPartnerReferenceNo string, serviceCode string) *TransferToDanaInquiryStatusRequest {
	this := TransferToDanaInquiryStatusRequest{}
	this.OriginalPartnerReferenceNo = originalPartnerReferenceNo
	this.ServiceCode = serviceCode
	return &this
}

// NewTransferToDanaInquiryStatusRequestWithDefaults instantiates a new TransferToDanaInquiryStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferToDanaInquiryStatusRequestWithDefaults() *TransferToDanaInquiryStatusRequest {
	this := TransferToDanaInquiryStatusRequest{}
	var serviceCode string = "38"
	this.ServiceCode = serviceCode
	return &this
}

// GetOriginalPartnerReferenceNo returns the OriginalPartnerReferenceNo field value
func (o *TransferToDanaInquiryStatusRequest) GetOriginalPartnerReferenceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalPartnerReferenceNo
}

// GetOriginalPartnerReferenceNoOk returns a tuple with the OriginalPartnerReferenceNo field value
// and a boolean to check if the value has been set.
func (o *TransferToDanaInquiryStatusRequest) GetOriginalPartnerReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalPartnerReferenceNo, true
}

// SetOriginalPartnerReferenceNo sets field value
func (o *TransferToDanaInquiryStatusRequest) SetOriginalPartnerReferenceNo(v string) {
	o.OriginalPartnerReferenceNo = v
}

// GetOriginalReferenceNo returns the OriginalReferenceNo field value if set, zero value otherwise.
func (o *TransferToDanaInquiryStatusRequest) GetOriginalReferenceNo() string {
	if o == nil || utils.IsNil(o.OriginalReferenceNo) {
		var ret string
		return ret
	}
	return *o.OriginalReferenceNo
}

// GetOriginalReferenceNoOk returns a tuple with the OriginalReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferToDanaInquiryStatusRequest) GetOriginalReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalReferenceNo) {
		return nil, false
	}
	return o.OriginalReferenceNo, true
}

// HasOriginalReferenceNo returns a boolean if a field has been set.
func (o *TransferToDanaInquiryStatusRequest) HasOriginalReferenceNo() bool {
	if o != nil && !utils.IsNil(o.OriginalReferenceNo) {
		return true
	}

	return false
}

// SetOriginalReferenceNo gets a reference to the given string and assigns it to the OriginalReferenceNo field.
func (o *TransferToDanaInquiryStatusRequest) SetOriginalReferenceNo(v string) {
	o.OriginalReferenceNo = &v
}

// GetOriginalExternalId returns the OriginalExternalId field value if set, zero value otherwise.
func (o *TransferToDanaInquiryStatusRequest) GetOriginalExternalId() string {
	if o == nil || utils.IsNil(o.OriginalExternalId) {
		var ret string
		return ret
	}
	return *o.OriginalExternalId
}

// GetOriginalExternalIdOk returns a tuple with the OriginalExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferToDanaInquiryStatusRequest) GetOriginalExternalIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalExternalId) {
		return nil, false
	}
	return o.OriginalExternalId, true
}

// HasOriginalExternalId returns a boolean if a field has been set.
func (o *TransferToDanaInquiryStatusRequest) HasOriginalExternalId() bool {
	if o != nil && !utils.IsNil(o.OriginalExternalId) {
		return true
	}

	return false
}

// SetOriginalExternalId gets a reference to the given string and assigns it to the OriginalExternalId field.
func (o *TransferToDanaInquiryStatusRequest) SetOriginalExternalId(v string) {
	o.OriginalExternalId = &v
}

// GetServiceCode returns the ServiceCode field value
func (o *TransferToDanaInquiryStatusRequest) GetServiceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceCode
}

// GetServiceCodeOk returns a tuple with the ServiceCode field value
// and a boolean to check if the value has been set.
func (o *TransferToDanaInquiryStatusRequest) GetServiceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceCode, true
}

// SetServiceCode sets field value
func (o *TransferToDanaInquiryStatusRequest) SetServiceCode(v string) {
	o.ServiceCode = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *TransferToDanaInquiryStatusRequest) GetAdditionalInfo() map[string]interface{} {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferToDanaInquiryStatusRequest) GetAdditionalInfoOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *TransferToDanaInquiryStatusRequest) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]interface{} and assigns it to the AdditionalInfo field.
func (o *TransferToDanaInquiryStatusRequest) SetAdditionalInfo(v map[string]interface{}) {
	o.AdditionalInfo = v
}

func (o TransferToDanaInquiryStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferToDanaInquiryStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["originalPartnerReferenceNo"] = o.OriginalPartnerReferenceNo
	if !utils.IsNil(o.OriginalReferenceNo) {
		toSerialize["originalReferenceNo"] = o.OriginalReferenceNo
	}
	if !utils.IsNil(o.OriginalExternalId) {
		toSerialize["originalExternalId"] = o.OriginalExternalId
	}
	toSerialize["serviceCode"] = o.ServiceCode
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *TransferToDanaInquiryStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"originalPartnerReferenceNo",
		"serviceCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransferToDanaInquiryStatusRequest := _TransferToDanaInquiryStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransferToDanaInquiryStatusRequest)

	if err != nil {
		return err
	}

	*o = TransferToDanaInquiryStatusRequest(varTransferToDanaInquiryStatusRequest)

	return err
}

type NullableTransferToDanaInquiryStatusRequest struct {
	value *TransferToDanaInquiryStatusRequest
	isSet bool
}

func (v NullableTransferToDanaInquiryStatusRequest) Get() *TransferToDanaInquiryStatusRequest {
	return v.value
}

func (v *NullableTransferToDanaInquiryStatusRequest) Set(val *TransferToDanaInquiryStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferToDanaInquiryStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferToDanaInquiryStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferToDanaInquiryStatusRequest(val *TransferToDanaInquiryStatusRequest) *NullableTransferToDanaInquiryStatusRequest {
	return &NullableTransferToDanaInquiryStatusRequest{value: val, isSet: true}
}

func (v NullableTransferToDanaInquiryStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferToDanaInquiryStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


