// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package disbursement

/*
Disbursement API

API for doing disbursement operations in DANA, including DANA account inquiry, transfer to DANA, and transfer to bank disbursement

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the BankAccountInquiryResponseAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BankAccountInquiryResponseAdditionalInfo{}

// BankAccountInquiryResponseAdditionalInfo Additional information
type BankAccountInquiryResponseAdditionalInfo struct {
	// Additional information of fee amount. Contains two sub-fields:<br> 1. Value: Amount, including the cents<br> 2. Currency: Currency code based on ISO 
	FeeAmount Money `json:"feeAmount"`
}

type _BankAccountInquiryResponseAdditionalInfo BankAccountInquiryResponseAdditionalInfo

// NewBankAccountInquiryResponseAdditionalInfo instantiates a new BankAccountInquiryResponseAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankAccountInquiryResponseAdditionalInfo(feeAmount Money) *BankAccountInquiryResponseAdditionalInfo {
	this := BankAccountInquiryResponseAdditionalInfo{}
	this.FeeAmount = feeAmount
	return &this
}

// NewBankAccountInquiryResponseAdditionalInfoWithDefaults instantiates a new BankAccountInquiryResponseAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankAccountInquiryResponseAdditionalInfoWithDefaults() *BankAccountInquiryResponseAdditionalInfo {
	this := BankAccountInquiryResponseAdditionalInfo{}
	return &this
}

// GetFeeAmount returns the FeeAmount field value
func (o *BankAccountInquiryResponseAdditionalInfo) GetFeeAmount() Money {
	if o == nil {
		var ret Money
		return ret
	}

	return o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value
// and a boolean to check if the value has been set.
func (o *BankAccountInquiryResponseAdditionalInfo) GetFeeAmountOk() (*Money, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeAmount, true
}

// SetFeeAmount sets field value
func (o *BankAccountInquiryResponseAdditionalInfo) SetFeeAmount(v Money) {
	o.FeeAmount = v
}

func (o BankAccountInquiryResponseAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankAccountInquiryResponseAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["feeAmount"] = o.FeeAmount
	return toSerialize, nil
}

func (o *BankAccountInquiryResponseAdditionalInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"feeAmount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBankAccountInquiryResponseAdditionalInfo := _BankAccountInquiryResponseAdditionalInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBankAccountInquiryResponseAdditionalInfo)

	if err != nil {
		return err
	}

	*o = BankAccountInquiryResponseAdditionalInfo(varBankAccountInquiryResponseAdditionalInfo)

	return err
}

type NullableBankAccountInquiryResponseAdditionalInfo struct {
	value *BankAccountInquiryResponseAdditionalInfo
	isSet bool
}

func (v NullableBankAccountInquiryResponseAdditionalInfo) Get() *BankAccountInquiryResponseAdditionalInfo {
	return v.value
}

func (v *NullableBankAccountInquiryResponseAdditionalInfo) Set(val *BankAccountInquiryResponseAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBankAccountInquiryResponseAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBankAccountInquiryResponseAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankAccountInquiryResponseAdditionalInfo(val *BankAccountInquiryResponseAdditionalInfo) *NullableBankAccountInquiryResponseAdditionalInfo {
	return &NullableBankAccountInquiryResponseAdditionalInfo{value: val, isSet: true}
}

func (v NullableBankAccountInquiryResponseAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankAccountInquiryResponseAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


