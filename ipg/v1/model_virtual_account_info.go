/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the VirtualAccountInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &VirtualAccountInfo{}

// VirtualAccountInfo struct for VirtualAccountInfo
type VirtualAccountInfo struct {
	// Virtual account code (required if payMethod is VIRTUAL_ACCOUNT)
	VirtualAccountCode string `json:"virtualAccountCode"`
	// Expiry time of virtual account in format YYYY-MM-DDTHH:mm:ss+07:00 (Jakarta time)
	VirtualAccountExpiryTime string `json:"virtualAccountExpiryTime" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\+07:00$"`
	// Signature of virtual account
	Signature string `json:"signature"`
}

type _VirtualAccountInfo VirtualAccountInfo

// NewVirtualAccountInfo instantiates a new VirtualAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualAccountInfo(virtualAccountCode string, virtualAccountExpiryTime string, signature string) *VirtualAccountInfo {
	this := VirtualAccountInfo{}
	this.VirtualAccountCode = virtualAccountCode
	this.VirtualAccountExpiryTime = virtualAccountExpiryTime
	this.Signature = signature
	return &this
}

// NewVirtualAccountInfoWithDefaults instantiates a new VirtualAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualAccountInfoWithDefaults() *VirtualAccountInfo {
	this := VirtualAccountInfo{}
	return &this
}

// GetVirtualAccountCode returns the VirtualAccountCode field value
func (o *VirtualAccountInfo) GetVirtualAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualAccountCode
}

// GetVirtualAccountCodeOk returns a tuple with the VirtualAccountCode field value
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetVirtualAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualAccountCode, true
}

// SetVirtualAccountCode sets field value
func (o *VirtualAccountInfo) SetVirtualAccountCode(v string) {
	o.VirtualAccountCode = v
}

// GetVirtualAccountExpiryTime returns the VirtualAccountExpiryTime field value
func (o *VirtualAccountInfo) GetVirtualAccountExpiryTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualAccountExpiryTime
}

// GetVirtualAccountExpiryTimeOk returns a tuple with the VirtualAccountExpiryTime field value
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetVirtualAccountExpiryTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualAccountExpiryTime, true
}

// SetVirtualAccountExpiryTime sets field value
func (o *VirtualAccountInfo) SetVirtualAccountExpiryTime(v string) {
	o.VirtualAccountExpiryTime = v
}

// GetSignature returns the Signature field value
func (o *VirtualAccountInfo) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *VirtualAccountInfo) SetSignature(v string) {
	o.Signature = v
}

func (o VirtualAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualAccountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["virtualAccountCode"] = o.VirtualAccountCode
	toSerialize["virtualAccountExpiryTime"] = o.VirtualAccountExpiryTime
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

func (o *VirtualAccountInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"virtualAccountCode",
		"virtualAccountExpiryTime",
		"signature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVirtualAccountInfo := _VirtualAccountInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVirtualAccountInfo)

	if err != nil {
		return err
	}

	*o = VirtualAccountInfo(varVirtualAccountInfo)

	return err
}

type NullableVirtualAccountInfo struct {
	value *VirtualAccountInfo
	isSet bool
}

func (v NullableVirtualAccountInfo) Get() *VirtualAccountInfo {
	return v.value
}

func (v *NullableVirtualAccountInfo) Set(val *VirtualAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualAccountInfo(val *VirtualAccountInfo) *NullableVirtualAccountInfo {
	return &NullableVirtualAccountInfo{value: val, isSet: true}
}

func (v NullableVirtualAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


