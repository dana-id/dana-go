/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/go_client/utils"
)

// checks if the ApplyOTTResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyOTTResponse{}

// ApplyOTTResponse struct for ApplyOTTResponse
type ApplyOTTResponse struct {
	// Response code. https://dashboard.dana.id/api-docs/read/109#HTML-API-ApplyOTT-ResponseCodeandMessage
	ResponseCode string `json:"responseCode"`
	// Response message. https://dashboard.dana.id/api-docs/read/109#HTML-API-ApplyOTT-ResponseCodeandMessage
	ResponseMessage string `json:"responseMessage"`
	// User resources
	UserResources []ApplyOTTResponseUserResourcesInner `json:"userResources"`
	// Additional information
	AdditionalInfo map[string]interface{} `json:"additionalInfo,omitempty"`
}

type _ApplyOTTResponse ApplyOTTResponse

// NewApplyOTTResponse instantiates a new ApplyOTTResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyOTTResponse(responseCode string, responseMessage string, userResources []ApplyOTTResponseUserResourcesInner) *ApplyOTTResponse {
	this := ApplyOTTResponse{}
	this.ResponseCode = responseCode
	this.ResponseMessage = responseMessage
	this.UserResources = userResources
	return &this
}

// NewApplyOTTResponseWithDefaults instantiates a new ApplyOTTResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyOTTResponseWithDefaults() *ApplyOTTResponse {
	this := ApplyOTTResponse{}
	return &this
}

// GetResponseCode returns the ResponseCode field value
func (o *ApplyOTTResponse) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *ApplyOTTResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *ApplyOTTResponse) SetResponseCode(v string) {
	o.ResponseCode = v
}

// GetResponseMessage returns the ResponseMessage field value
func (o *ApplyOTTResponse) GetResponseMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value
// and a boolean to check if the value has been set.
func (o *ApplyOTTResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseMessage, true
}

// SetResponseMessage sets field value
func (o *ApplyOTTResponse) SetResponseMessage(v string) {
	o.ResponseMessage = v
}

// GetUserResources returns the UserResources field value
func (o *ApplyOTTResponse) GetUserResources() []ApplyOTTResponseUserResourcesInner {
	if o == nil {
		var ret []ApplyOTTResponseUserResourcesInner
		return ret
	}

	return o.UserResources
}

// GetUserResourcesOk returns a tuple with the UserResources field value
// and a boolean to check if the value has been set.
func (o *ApplyOTTResponse) GetUserResourcesOk() ([]ApplyOTTResponseUserResourcesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserResources, true
}

// SetUserResources sets field value
func (o *ApplyOTTResponse) SetUserResources(v []ApplyOTTResponseUserResourcesInner) {
	o.UserResources = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *ApplyOTTResponse) GetAdditionalInfo() map[string]interface{} {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyOTTResponse) GetAdditionalInfoOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *ApplyOTTResponse) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]interface{} and assigns it to the AdditionalInfo field.
func (o *ApplyOTTResponse) SetAdditionalInfo(v map[string]interface{}) {
	o.AdditionalInfo = v
}

func (o ApplyOTTResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyOTTResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseCode"] = o.ResponseCode
	toSerialize["responseMessage"] = o.ResponseMessage
	toSerialize["userResources"] = o.UserResources
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *ApplyOTTResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responseCode",
		"responseMessage",
		"userResources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplyOTTResponse := _ApplyOTTResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApplyOTTResponse)

	if err != nil {
		return err
	}

	*o = ApplyOTTResponse(varApplyOTTResponse)

	return err
}

type NullableApplyOTTResponse struct {
	value *ApplyOTTResponse
	isSet bool
}

func (v NullableApplyOTTResponse) Get() *ApplyOTTResponse {
	return v.value
}

func (v *NullableApplyOTTResponse) Set(val *ApplyOTTResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyOTTResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyOTTResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyOTTResponse(val *ApplyOTTResponse) *NullableApplyOTTResponse {
	return &NullableApplyOTTResponse{value: val, isSet: true}
}

func (v NullableApplyOTTResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyOTTResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


