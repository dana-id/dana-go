/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the ApplyTokenResponseAdditionalInfoUserInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyTokenResponseAdditionalInfoUserInfo{}

// ApplyTokenResponseAdditionalInfoUserInfo Additional information of user. Contains publicUserId
type ApplyTokenResponseAdditionalInfoUserInfo struct {
	// Static unique identifier for one user
	PublicUserId *string `json:"publicUserId,omitempty"`
}

// NewApplyTokenResponseAdditionalInfoUserInfo instantiates a new ApplyTokenResponseAdditionalInfoUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyTokenResponseAdditionalInfoUserInfo() *ApplyTokenResponseAdditionalInfoUserInfo {
	this := ApplyTokenResponseAdditionalInfoUserInfo{}
	return &this
}

// NewApplyTokenResponseAdditionalInfoUserInfoWithDefaults instantiates a new ApplyTokenResponseAdditionalInfoUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyTokenResponseAdditionalInfoUserInfoWithDefaults() *ApplyTokenResponseAdditionalInfoUserInfo {
	this := ApplyTokenResponseAdditionalInfoUserInfo{}
	return &this
}

// GetPublicUserId returns the PublicUserId field value if set, zero value otherwise.
func (o *ApplyTokenResponseAdditionalInfoUserInfo) GetPublicUserId() string {
	if o == nil || utils.IsNil(o.PublicUserId) {
		var ret string
		return ret
	}
	return *o.PublicUserId
}

// GetPublicUserIdOk returns a tuple with the PublicUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyTokenResponseAdditionalInfoUserInfo) GetPublicUserIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PublicUserId) {
		return nil, false
	}
	return o.PublicUserId, true
}

// HasPublicUserId returns a boolean if a field has been set.
func (o *ApplyTokenResponseAdditionalInfoUserInfo) HasPublicUserId() bool {
	if o != nil && !utils.IsNil(o.PublicUserId) {
		return true
	}

	return false
}

// SetPublicUserId gets a reference to the given string and assigns it to the PublicUserId field.
func (o *ApplyTokenResponseAdditionalInfoUserInfo) SetPublicUserId(v string) {
	o.PublicUserId = &v
}

func (o ApplyTokenResponseAdditionalInfoUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyTokenResponseAdditionalInfoUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PublicUserId) {
		toSerialize["publicUserId"] = o.PublicUserId
	}
	return toSerialize, nil
}

type NullableApplyTokenResponseAdditionalInfoUserInfo struct {
	value *ApplyTokenResponseAdditionalInfoUserInfo
	isSet bool
}

func (v NullableApplyTokenResponseAdditionalInfoUserInfo) Get() *ApplyTokenResponseAdditionalInfoUserInfo {
	return v.value
}

func (v *NullableApplyTokenResponseAdditionalInfoUserInfo) Set(val *ApplyTokenResponseAdditionalInfoUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyTokenResponseAdditionalInfoUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyTokenResponseAdditionalInfoUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyTokenResponseAdditionalInfoUserInfo(val *ApplyTokenResponseAdditionalInfoUserInfo) *NullableApplyTokenResponseAdditionalInfoUserInfo {
	return &NullableApplyTokenResponseAdditionalInfoUserInfo{value: val, isSet: true}
}

func (v NullableApplyTokenResponseAdditionalInfoUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyTokenResponseAdditionalInfoUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


