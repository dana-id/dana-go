/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the PayOptionDetailAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PayOptionDetailAdditionalInfo{}

// PayOptionDetailAdditionalInfo struct for PayOptionDetailAdditionalInfo
type PayOptionDetailAdditionalInfo struct {
	// Top up and pay
	TopupAndPay *bool `json:"topupAndPay,omitempty"`
	// Number account of payer
	PayerAccountNo *string `json:"payerAccountNo,omitempty"`
	// Information save card after payment process
	SaveCardAfterPay *bool `json:"saveCardAfterPay,omitempty"`
	// Information of channel
	ChannelInfo *string `json:"channelInfo,omitempty"`
	// Information of issuing country
	IssuingCountry *string `json:"issuingCountry,omitempty"`
	// Type of asset
	AssetType *string `json:"assetType,omitempty"`
	// Extend information
	ExtendInfo *string `json:"extendInfo,omitempty"`
}

// NewPayOptionDetailAdditionalInfo instantiates a new PayOptionDetailAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayOptionDetailAdditionalInfo() *PayOptionDetailAdditionalInfo {
	this := PayOptionDetailAdditionalInfo{}
	return &this
}

// NewPayOptionDetailAdditionalInfoWithDefaults instantiates a new PayOptionDetailAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayOptionDetailAdditionalInfoWithDefaults() *PayOptionDetailAdditionalInfo {
	this := PayOptionDetailAdditionalInfo{}
	return &this
}

// GetTopupAndPay returns the TopupAndPay field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetTopupAndPay() bool {
	if o == nil || utils.IsNil(o.TopupAndPay) {
		var ret bool
		return ret
	}
	return *o.TopupAndPay
}

// GetTopupAndPayOk returns a tuple with the TopupAndPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetTopupAndPayOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.TopupAndPay) {
		return nil, false
	}
	return o.TopupAndPay, true
}

// HasTopupAndPay returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasTopupAndPay() bool {
	if o != nil && !utils.IsNil(o.TopupAndPay) {
		return true
	}

	return false
}

// SetTopupAndPay gets a reference to the given bool and assigns it to the TopupAndPay field.
func (o *PayOptionDetailAdditionalInfo) SetTopupAndPay(v bool) {
	o.TopupAndPay = &v
}

// GetPayerAccountNo returns the PayerAccountNo field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetPayerAccountNo() string {
	if o == nil || utils.IsNil(o.PayerAccountNo) {
		var ret string
		return ret
	}
	return *o.PayerAccountNo
}

// GetPayerAccountNoOk returns a tuple with the PayerAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetPayerAccountNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PayerAccountNo) {
		return nil, false
	}
	return o.PayerAccountNo, true
}

// HasPayerAccountNo returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasPayerAccountNo() bool {
	if o != nil && !utils.IsNil(o.PayerAccountNo) {
		return true
	}

	return false
}

// SetPayerAccountNo gets a reference to the given string and assigns it to the PayerAccountNo field.
func (o *PayOptionDetailAdditionalInfo) SetPayerAccountNo(v string) {
	o.PayerAccountNo = &v
}

// GetSaveCardAfterPay returns the SaveCardAfterPay field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetSaveCardAfterPay() bool {
	if o == nil || utils.IsNil(o.SaveCardAfterPay) {
		var ret bool
		return ret
	}
	return *o.SaveCardAfterPay
}

// GetSaveCardAfterPayOk returns a tuple with the SaveCardAfterPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetSaveCardAfterPayOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.SaveCardAfterPay) {
		return nil, false
	}
	return o.SaveCardAfterPay, true
}

// HasSaveCardAfterPay returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasSaveCardAfterPay() bool {
	if o != nil && !utils.IsNil(o.SaveCardAfterPay) {
		return true
	}

	return false
}

// SetSaveCardAfterPay gets a reference to the given bool and assigns it to the SaveCardAfterPay field.
func (o *PayOptionDetailAdditionalInfo) SetSaveCardAfterPay(v bool) {
	o.SaveCardAfterPay = &v
}

// GetChannelInfo returns the ChannelInfo field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetChannelInfo() string {
	if o == nil || utils.IsNil(o.ChannelInfo) {
		var ret string
		return ret
	}
	return *o.ChannelInfo
}

// GetChannelInfoOk returns a tuple with the ChannelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetChannelInfoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ChannelInfo) {
		return nil, false
	}
	return o.ChannelInfo, true
}

// HasChannelInfo returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasChannelInfo() bool {
	if o != nil && !utils.IsNil(o.ChannelInfo) {
		return true
	}

	return false
}

// SetChannelInfo gets a reference to the given string and assigns it to the ChannelInfo field.
func (o *PayOptionDetailAdditionalInfo) SetChannelInfo(v string) {
	o.ChannelInfo = &v
}

// GetIssuingCountry returns the IssuingCountry field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetIssuingCountry() string {
	if o == nil || utils.IsNil(o.IssuingCountry) {
		var ret string
		return ret
	}
	return *o.IssuingCountry
}

// GetIssuingCountryOk returns a tuple with the IssuingCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetIssuingCountryOk() (*string, bool) {
	if o == nil || utils.IsNil(o.IssuingCountry) {
		return nil, false
	}
	return o.IssuingCountry, true
}

// HasIssuingCountry returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasIssuingCountry() bool {
	if o != nil && !utils.IsNil(o.IssuingCountry) {
		return true
	}

	return false
}

// SetIssuingCountry gets a reference to the given string and assigns it to the IssuingCountry field.
func (o *PayOptionDetailAdditionalInfo) SetIssuingCountry(v string) {
	o.IssuingCountry = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetAssetType() string {
	if o == nil || utils.IsNil(o.AssetType) {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetAssetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasAssetType() bool {
	if o != nil && !utils.IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *PayOptionDetailAdditionalInfo) SetAssetType(v string) {
	o.AssetType = &v
}

// GetExtendInfo returns the ExtendInfo field value if set, zero value otherwise.
func (o *PayOptionDetailAdditionalInfo) GetExtendInfo() string {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		var ret string
		return ret
	}
	return *o.ExtendInfo
}

// GetExtendInfoOk returns a tuple with the ExtendInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionDetailAdditionalInfo) GetExtendInfoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		return nil, false
	}
	return o.ExtendInfo, true
}

// HasExtendInfo returns a boolean if a field has been set.
func (o *PayOptionDetailAdditionalInfo) HasExtendInfo() bool {
	if o != nil && !utils.IsNil(o.ExtendInfo) {
		return true
	}

	return false
}

// SetExtendInfo gets a reference to the given string and assigns it to the ExtendInfo field.
func (o *PayOptionDetailAdditionalInfo) SetExtendInfo(v string) {
	o.ExtendInfo = &v
}

func (o PayOptionDetailAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayOptionDetailAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.TopupAndPay) {
		toSerialize["topupAndPay"] = o.TopupAndPay
	}
	if !utils.IsNil(o.PayerAccountNo) {
		toSerialize["payerAccountNo"] = o.PayerAccountNo
	}
	if !utils.IsNil(o.SaveCardAfterPay) {
		toSerialize["saveCardAfterPay"] = o.SaveCardAfterPay
	}
	if !utils.IsNil(o.ChannelInfo) {
		toSerialize["channelInfo"] = o.ChannelInfo
	}
	if !utils.IsNil(o.IssuingCountry) {
		toSerialize["issuingCountry"] = o.IssuingCountry
	}
	if !utils.IsNil(o.AssetType) {
		toSerialize["assetType"] = o.AssetType
	}
	if !utils.IsNil(o.ExtendInfo) {
		toSerialize["extendInfo"] = o.ExtendInfo
	}
	return toSerialize, nil
}

type NullablePayOptionDetailAdditionalInfo struct {
	value *PayOptionDetailAdditionalInfo
	isSet bool
}

func (v NullablePayOptionDetailAdditionalInfo) Get() *PayOptionDetailAdditionalInfo {
	return v.value
}

func (v *NullablePayOptionDetailAdditionalInfo) Set(val *PayOptionDetailAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePayOptionDetailAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePayOptionDetailAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayOptionDetailAdditionalInfo(val *PayOptionDetailAdditionalInfo) *NullablePayOptionDetailAdditionalInfo {
	return &NullablePayOptionDetailAdditionalInfo{value: val, isSet: true}
}

func (v NullablePayOptionDetailAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayOptionDetailAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


