/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the IPGPaymentResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &IPGPaymentResponse{}

// IPGPaymentResponse Response object for Direct Debit Payment API
type IPGPaymentResponse struct {
	// Refer to response code list:<br> * 2005400 - Successful<br> * 4005400 - Bad Request - Retry request with proper parameter<br> * 4005401 - Invalid Field Format - Retry request with proper parameter<br> * 4005402 - Invalid Mandatory Field - Retry request with proper parameter<br> * 4015400 - Unauthorized. [reason] - Retry request with proper parameter<br> * 4035402 - Exceeds Transaction Amount Limit - Try to adjust the order amount<br> * 4035405 - Do Not Honor - Retry request with proper parameter or can contact DANA to check the user/account status<br> * 4035415 - Transaction Not Permitted - Retry request periodically or consult to DANA<br> * 4045408 - Invalid Merchant - Retry request with proper parameter<br> * 4045418 - Inconsistent Request - Retry with proper parameter<br> * 4295400 - Too Many Requests - Retry request periodically by sending same request payload<br> * 5005400 - General Error - Retry request periodically<br> * 5005401 - Internal Server Error - Retry request periodically by sending same request payload<br> 
	ResponseCode string `json:"responseCode"`
	// Human readable response message
	ResponseMessage string `json:"responseMessage"`
	// Transaction identifier on DANA system, returned when transaction is successfully processed
	ReferenceNo *string `json:"referenceNo,omitempty"`
	// Transaction identifier on partner system which assigned to each transaction
	PartnerReferenceNo string `json:"partnerReferenceNo"`
	// DANA checkout URL, returned when transaction is successfully processed
	WebRedirectUrl *string `json:"webRedirectUrl,omitempty"`
	// Additional information
	AdditionalInfo map[string]interface{} `json:"additionalInfo,omitempty"`
}

type _IPGPaymentResponse IPGPaymentResponse

// NewIPGPaymentResponse instantiates a new IPGPaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPGPaymentResponse(responseCode string, responseMessage string, partnerReferenceNo string) *IPGPaymentResponse {
	this := IPGPaymentResponse{}
	this.ResponseCode = responseCode
	this.ResponseMessage = responseMessage
	this.PartnerReferenceNo = partnerReferenceNo
	return &this
}

// NewIPGPaymentResponseWithDefaults instantiates a new IPGPaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPGPaymentResponseWithDefaults() *IPGPaymentResponse {
	this := IPGPaymentResponse{}
	return &this
}

// GetResponseCode returns the ResponseCode field value
func (o *IPGPaymentResponse) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *IPGPaymentResponse) SetResponseCode(v string) {
	o.ResponseCode = v
}

// GetResponseMessage returns the ResponseMessage field value
func (o *IPGPaymentResponse) GetResponseMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseMessage, true
}

// SetResponseMessage sets field value
func (o *IPGPaymentResponse) SetResponseMessage(v string) {
	o.ResponseMessage = v
}

// GetReferenceNo returns the ReferenceNo field value if set, zero value otherwise.
func (o *IPGPaymentResponse) GetReferenceNo() string {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		var ret string
		return ret
	}
	return *o.ReferenceNo
}

// GetReferenceNoOk returns a tuple with the ReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		return nil, false
	}
	return o.ReferenceNo, true
}

// HasReferenceNo returns a boolean if a field has been set.
func (o *IPGPaymentResponse) HasReferenceNo() bool {
	if o != nil && !utils.IsNil(o.ReferenceNo) {
		return true
	}

	return false
}

// SetReferenceNo gets a reference to the given string and assigns it to the ReferenceNo field.
func (o *IPGPaymentResponse) SetReferenceNo(v string) {
	o.ReferenceNo = &v
}

// GetPartnerReferenceNo returns the PartnerReferenceNo field value
func (o *IPGPaymentResponse) GetPartnerReferenceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerReferenceNo
}

// GetPartnerReferenceNoOk returns a tuple with the PartnerReferenceNo field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetPartnerReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerReferenceNo, true
}

// SetPartnerReferenceNo sets field value
func (o *IPGPaymentResponse) SetPartnerReferenceNo(v string) {
	o.PartnerReferenceNo = v
}

// GetWebRedirectUrl returns the WebRedirectUrl field value if set, zero value otherwise.
func (o *IPGPaymentResponse) GetWebRedirectUrl() string {
	if o == nil || utils.IsNil(o.WebRedirectUrl) {
		var ret string
		return ret
	}
	return *o.WebRedirectUrl
}

// GetWebRedirectUrlOk returns a tuple with the WebRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetWebRedirectUrlOk() (*string, bool) {
	if o == nil || utils.IsNil(o.WebRedirectUrl) {
		return nil, false
	}
	return o.WebRedirectUrl, true
}

// HasWebRedirectUrl returns a boolean if a field has been set.
func (o *IPGPaymentResponse) HasWebRedirectUrl() bool {
	if o != nil && !utils.IsNil(o.WebRedirectUrl) {
		return true
	}

	return false
}

// SetWebRedirectUrl gets a reference to the given string and assigns it to the WebRedirectUrl field.
func (o *IPGPaymentResponse) SetWebRedirectUrl(v string) {
	o.WebRedirectUrl = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *IPGPaymentResponse) GetAdditionalInfo() map[string]interface{} {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentResponse) GetAdditionalInfoOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *IPGPaymentResponse) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]interface{} and assigns it to the AdditionalInfo field.
func (o *IPGPaymentResponse) SetAdditionalInfo(v map[string]interface{}) {
	o.AdditionalInfo = v
}

func (o IPGPaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPGPaymentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseCode"] = o.ResponseCode
	toSerialize["responseMessage"] = o.ResponseMessage
	if !utils.IsNil(o.ReferenceNo) {
		toSerialize["referenceNo"] = o.ReferenceNo
	}
	toSerialize["partnerReferenceNo"] = o.PartnerReferenceNo
	if !utils.IsNil(o.WebRedirectUrl) {
		toSerialize["webRedirectUrl"] = o.WebRedirectUrl
	}
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *IPGPaymentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responseCode",
		"responseMessage",
		"partnerReferenceNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIPGPaymentResponse := _IPGPaymentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIPGPaymentResponse)

	if err != nil {
		return err
	}

	*o = IPGPaymentResponse(varIPGPaymentResponse)

	return err
}

type NullableIPGPaymentResponse struct {
	value *IPGPaymentResponse
	isSet bool
}

func (v NullableIPGPaymentResponse) Get() *IPGPaymentResponse {
	return v.value
}

func (v *NullableIPGPaymentResponse) Set(val *IPGPaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIPGPaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIPGPaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPGPaymentResponse(val *IPGPaymentResponse) *NullableIPGPaymentResponse {
	return &NullableIPGPaymentResponse{value: val, isSet: true}
}

func (v NullableIPGPaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPGPaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


