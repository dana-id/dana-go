/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/go_client/utils"
)

// checks if the AccountUnbindingResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AccountUnbindingResponse{}

// AccountUnbindingResponse struct for AccountUnbindingResponse
type AccountUnbindingResponse struct {
	// Response code. Refer to https://dashboard.dana.id/api-docs/read/108#HTML-AccountUnbinding-ResponseCodeandMessage
	ResponseCode string `json:"responseCode"`
	// Response message. Refer to https://dashboard.dana.id/api-docs/read/108#HTML-AccountUnbinding-ResponseCodeandMessage
	ResponseMessage string `json:"responseMessage"`
	// Transaction identifier on DANA system
	ReferenceNo *string `json:"referenceNo,omitempty"`
	// Unique transaction identifier on partner system which assigned to each transaction
	PartnerReferenceNo *string `json:"partnerReferenceNo,omitempty"`
	// Merchant identifier that is unique per each merchant
	MerchantId *string `json:"merchantId,omitempty"`
	// Information of sub merchant identifier
	SubMerchantId *string `json:"subMerchantId,omitempty"`
	// Information of link identifier
	LinkId *string `json:"linkId,omitempty"`
	// Result of unlinking process
	UnlinkResult *string `json:"unlinkResult,omitempty"`
	// Additional information
	AdditionalInfo map[string]interface{} `json:"additionalInfo,omitempty"`
}

type _AccountUnbindingResponse AccountUnbindingResponse

// NewAccountUnbindingResponse instantiates a new AccountUnbindingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUnbindingResponse(responseCode string, responseMessage string) *AccountUnbindingResponse {
	this := AccountUnbindingResponse{}
	this.ResponseCode = responseCode
	this.ResponseMessage = responseMessage
	return &this
}

// NewAccountUnbindingResponseWithDefaults instantiates a new AccountUnbindingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUnbindingResponseWithDefaults() *AccountUnbindingResponse {
	this := AccountUnbindingResponse{}
	return &this
}

// GetResponseCode returns the ResponseCode field value
func (o *AccountUnbindingResponse) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *AccountUnbindingResponse) SetResponseCode(v string) {
	o.ResponseCode = v
}

// GetResponseMessage returns the ResponseMessage field value
func (o *AccountUnbindingResponse) GetResponseMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseMessage, true
}

// SetResponseMessage sets field value
func (o *AccountUnbindingResponse) SetResponseMessage(v string) {
	o.ResponseMessage = v
}

// GetReferenceNo returns the ReferenceNo field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetReferenceNo() string {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		var ret string
		return ret
	}
	return *o.ReferenceNo
}

// GetReferenceNoOk returns a tuple with the ReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		return nil, false
	}
	return o.ReferenceNo, true
}

// HasReferenceNo returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasReferenceNo() bool {
	if o != nil && !utils.IsNil(o.ReferenceNo) {
		return true
	}

	return false
}

// SetReferenceNo gets a reference to the given string and assigns it to the ReferenceNo field.
func (o *AccountUnbindingResponse) SetReferenceNo(v string) {
	o.ReferenceNo = &v
}

// GetPartnerReferenceNo returns the PartnerReferenceNo field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetPartnerReferenceNo() string {
	if o == nil || utils.IsNil(o.PartnerReferenceNo) {
		var ret string
		return ret
	}
	return *o.PartnerReferenceNo
}

// GetPartnerReferenceNoOk returns a tuple with the PartnerReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetPartnerReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PartnerReferenceNo) {
		return nil, false
	}
	return o.PartnerReferenceNo, true
}

// HasPartnerReferenceNo returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasPartnerReferenceNo() bool {
	if o != nil && !utils.IsNil(o.PartnerReferenceNo) {
		return true
	}

	return false
}

// SetPartnerReferenceNo gets a reference to the given string and assigns it to the PartnerReferenceNo field.
func (o *AccountUnbindingResponse) SetPartnerReferenceNo(v string) {
	o.PartnerReferenceNo = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetMerchantId() string {
	if o == nil || utils.IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetMerchantIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasMerchantId() bool {
	if o != nil && !utils.IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *AccountUnbindingResponse) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetSubMerchantId returns the SubMerchantId field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetSubMerchantId() string {
	if o == nil || utils.IsNil(o.SubMerchantId) {
		var ret string
		return ret
	}
	return *o.SubMerchantId
}

// GetSubMerchantIdOk returns a tuple with the SubMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetSubMerchantIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SubMerchantId) {
		return nil, false
	}
	return o.SubMerchantId, true
}

// HasSubMerchantId returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasSubMerchantId() bool {
	if o != nil && !utils.IsNil(o.SubMerchantId) {
		return true
	}

	return false
}

// SetSubMerchantId gets a reference to the given string and assigns it to the SubMerchantId field.
func (o *AccountUnbindingResponse) SetSubMerchantId(v string) {
	o.SubMerchantId = &v
}

// GetLinkId returns the LinkId field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetLinkId() string {
	if o == nil || utils.IsNil(o.LinkId) {
		var ret string
		return ret
	}
	return *o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetLinkIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LinkId) {
		return nil, false
	}
	return o.LinkId, true
}

// HasLinkId returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasLinkId() bool {
	if o != nil && !utils.IsNil(o.LinkId) {
		return true
	}

	return false
}

// SetLinkId gets a reference to the given string and assigns it to the LinkId field.
func (o *AccountUnbindingResponse) SetLinkId(v string) {
	o.LinkId = &v
}

// GetUnlinkResult returns the UnlinkResult field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetUnlinkResult() string {
	if o == nil || utils.IsNil(o.UnlinkResult) {
		var ret string
		return ret
	}
	return *o.UnlinkResult
}

// GetUnlinkResultOk returns a tuple with the UnlinkResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetUnlinkResultOk() (*string, bool) {
	if o == nil || utils.IsNil(o.UnlinkResult) {
		return nil, false
	}
	return o.UnlinkResult, true
}

// HasUnlinkResult returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasUnlinkResult() bool {
	if o != nil && !utils.IsNil(o.UnlinkResult) {
		return true
	}

	return false
}

// SetUnlinkResult gets a reference to the given string and assigns it to the UnlinkResult field.
func (o *AccountUnbindingResponse) SetUnlinkResult(v string) {
	o.UnlinkResult = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *AccountUnbindingResponse) GetAdditionalInfo() map[string]interface{} {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUnbindingResponse) GetAdditionalInfoOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *AccountUnbindingResponse) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]interface{} and assigns it to the AdditionalInfo field.
func (o *AccountUnbindingResponse) SetAdditionalInfo(v map[string]interface{}) {
	o.AdditionalInfo = v
}

func (o AccountUnbindingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountUnbindingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseCode"] = o.ResponseCode
	toSerialize["responseMessage"] = o.ResponseMessage
	if !utils.IsNil(o.ReferenceNo) {
		toSerialize["referenceNo"] = o.ReferenceNo
	}
	if !utils.IsNil(o.PartnerReferenceNo) {
		toSerialize["partnerReferenceNo"] = o.PartnerReferenceNo
	}
	if !utils.IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !utils.IsNil(o.SubMerchantId) {
		toSerialize["subMerchantId"] = o.SubMerchantId
	}
	if !utils.IsNil(o.LinkId) {
		toSerialize["linkId"] = o.LinkId
	}
	if !utils.IsNil(o.UnlinkResult) {
		toSerialize["unlinkResult"] = o.UnlinkResult
	}
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *AccountUnbindingResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responseCode",
		"responseMessage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountUnbindingResponse := _AccountUnbindingResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountUnbindingResponse)

	if err != nil {
		return err
	}

	*o = AccountUnbindingResponse(varAccountUnbindingResponse)

	return err
}

type NullableAccountUnbindingResponse struct {
	value *AccountUnbindingResponse
	isSet bool
}

func (v NullableAccountUnbindingResponse) Get() *AccountUnbindingResponse {
	return v.value
}

func (v *NullableAccountUnbindingResponse) Set(val *AccountUnbindingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUnbindingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUnbindingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUnbindingResponse(val *AccountUnbindingResponse) *NullableAccountUnbindingResponse {
	return &NullableAccountUnbindingResponse{value: val, isSet: true}
}

func (v NullableAccountUnbindingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUnbindingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


