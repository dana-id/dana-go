/*
IPG Cashier Pay API

API for enabling the user to make payment from merchant's platform with redirecting to DANA's platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipg

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/go_client/utils"
)

// checks if the IPGPaymentRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &IPGPaymentRequest{}

// IPGPaymentRequest struct for IPGPaymentRequest
type IPGPaymentRequest struct {
	// Unique transaction identifier on partner system which assigned to each transaction
	PartnerReferenceNo string `json:"partnerReferenceNo"`
	// Merchant identifier that is unique per each merchant
	MerchantId string `json:"merchantId"`
	SubMerchantId *string `json:"subMerchantId,omitempty"`
	Amount Money `json:"amount"`
	// Store identifier to indicate to which store this payment belongs to
	ExternalStoreId *string `json:"externalStoreId,omitempty"`
	// The time when the payment will be automatically expired, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)
	ValidUpTo *string `json:"validUpTo,omitempty" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\+07:00$"`
	// Used for getting more info regarding source of request of the user
	PointOfInitiation *string `json:"pointOfInitiation,omitempty"`
	// Payment method(s) that cannot be used for this payment
	DisabledPayMethods *string `json:"disabledPayMethods,omitempty"`
	// Payment option that will be used for this payment
	PayOptionDetails []PayOptionDetail `json:"payOptionDetails,omitempty"`
	AdditionalInfo IPGPaymentRequestAdditionalInfo `json:"additionalInfo"`
	// Notify URL that DANA must send the payment notification to
	UrlParams []UrlParam `json:"urlParams,omitempty"`
}

type _IPGPaymentRequest IPGPaymentRequest

// NewIPGPaymentRequest instantiates a new IPGPaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPGPaymentRequest(partnerReferenceNo string, merchantId string, amount Money, additionalInfo IPGPaymentRequestAdditionalInfo) *IPGPaymentRequest {
	this := IPGPaymentRequest{}
	this.PartnerReferenceNo = partnerReferenceNo
	this.MerchantId = merchantId
	this.Amount = amount
	this.AdditionalInfo = additionalInfo
	return &this
}

// NewIPGPaymentRequestWithDefaults instantiates a new IPGPaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPGPaymentRequestWithDefaults() *IPGPaymentRequest {
	this := IPGPaymentRequest{}
	return &this
}

// GetPartnerReferenceNo returns the PartnerReferenceNo field value
func (o *IPGPaymentRequest) GetPartnerReferenceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerReferenceNo
}

// GetPartnerReferenceNoOk returns a tuple with the PartnerReferenceNo field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetPartnerReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerReferenceNo, true
}

// SetPartnerReferenceNo sets field value
func (o *IPGPaymentRequest) SetPartnerReferenceNo(v string) {
	o.PartnerReferenceNo = v
}

// GetMerchantId returns the MerchantId field value
func (o *IPGPaymentRequest) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *IPGPaymentRequest) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetSubMerchantId returns the SubMerchantId field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetSubMerchantId() string {
	if o == nil || utils.IsNil(o.SubMerchantId) {
		var ret string
		return ret
	}
	return *o.SubMerchantId
}

// GetSubMerchantIdOk returns a tuple with the SubMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetSubMerchantIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SubMerchantId) {
		return nil, false
	}
	return o.SubMerchantId, true
}

// HasSubMerchantId returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasSubMerchantId() bool {
	if o != nil && !utils.IsNil(o.SubMerchantId) {
		return true
	}

	return false
}

// SetSubMerchantId gets a reference to the given string and assigns it to the SubMerchantId field.
func (o *IPGPaymentRequest) SetSubMerchantId(v string) {
	o.SubMerchantId = &v
}

// GetAmount returns the Amount field value
func (o *IPGPaymentRequest) GetAmount() Money {
	if o == nil {
		var ret Money
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetAmountOk() (*Money, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *IPGPaymentRequest) SetAmount(v Money) {
	o.Amount = v
}

// GetExternalStoreId returns the ExternalStoreId field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetExternalStoreId() string {
	if o == nil || utils.IsNil(o.ExternalStoreId) {
		var ret string
		return ret
	}
	return *o.ExternalStoreId
}

// GetExternalStoreIdOk returns a tuple with the ExternalStoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetExternalStoreIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExternalStoreId) {
		return nil, false
	}
	return o.ExternalStoreId, true
}

// HasExternalStoreId returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasExternalStoreId() bool {
	if o != nil && !utils.IsNil(o.ExternalStoreId) {
		return true
	}

	return false
}

// SetExternalStoreId gets a reference to the given string and assigns it to the ExternalStoreId field.
func (o *IPGPaymentRequest) SetExternalStoreId(v string) {
	o.ExternalStoreId = &v
}

// GetValidUpTo returns the ValidUpTo field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetValidUpTo() string {
	if o == nil || utils.IsNil(o.ValidUpTo) {
		var ret string
		return ret
	}
	return *o.ValidUpTo
}

// GetValidUpToOk returns a tuple with the ValidUpTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetValidUpToOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ValidUpTo) {
		return nil, false
	}
	return o.ValidUpTo, true
}

// HasValidUpTo returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasValidUpTo() bool {
	if o != nil && !utils.IsNil(o.ValidUpTo) {
		return true
	}

	return false
}

// SetValidUpTo gets a reference to the given string and assigns it to the ValidUpTo field.
func (o *IPGPaymentRequest) SetValidUpTo(v string) {
	o.ValidUpTo = &v
}

// GetPointOfInitiation returns the PointOfInitiation field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetPointOfInitiation() string {
	if o == nil || utils.IsNil(o.PointOfInitiation) {
		var ret string
		return ret
	}
	return *o.PointOfInitiation
}

// GetPointOfInitiationOk returns a tuple with the PointOfInitiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetPointOfInitiationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PointOfInitiation) {
		return nil, false
	}
	return o.PointOfInitiation, true
}

// HasPointOfInitiation returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasPointOfInitiation() bool {
	if o != nil && !utils.IsNil(o.PointOfInitiation) {
		return true
	}

	return false
}

// SetPointOfInitiation gets a reference to the given string and assigns it to the PointOfInitiation field.
func (o *IPGPaymentRequest) SetPointOfInitiation(v string) {
	o.PointOfInitiation = &v
}

// GetDisabledPayMethods returns the DisabledPayMethods field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetDisabledPayMethods() string {
	if o == nil || utils.IsNil(o.DisabledPayMethods) {
		var ret string
		return ret
	}
	return *o.DisabledPayMethods
}

// GetDisabledPayMethodsOk returns a tuple with the DisabledPayMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetDisabledPayMethodsOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DisabledPayMethods) {
		return nil, false
	}
	return o.DisabledPayMethods, true
}

// HasDisabledPayMethods returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasDisabledPayMethods() bool {
	if o != nil && !utils.IsNil(o.DisabledPayMethods) {
		return true
	}

	return false
}

// SetDisabledPayMethods gets a reference to the given string and assigns it to the DisabledPayMethods field.
func (o *IPGPaymentRequest) SetDisabledPayMethods(v string) {
	o.DisabledPayMethods = &v
}

// GetPayOptionDetails returns the PayOptionDetails field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetPayOptionDetails() []PayOptionDetail {
	if o == nil || utils.IsNil(o.PayOptionDetails) {
		var ret []PayOptionDetail
		return ret
	}
	return o.PayOptionDetails
}

// GetPayOptionDetailsOk returns a tuple with the PayOptionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetPayOptionDetailsOk() ([]PayOptionDetail, bool) {
	if o == nil || utils.IsNil(o.PayOptionDetails) {
		return nil, false
	}
	return o.PayOptionDetails, true
}

// HasPayOptionDetails returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasPayOptionDetails() bool {
	if o != nil && !utils.IsNil(o.PayOptionDetails) {
		return true
	}

	return false
}

// SetPayOptionDetails gets a reference to the given []PayOptionDetail and assigns it to the PayOptionDetails field.
func (o *IPGPaymentRequest) SetPayOptionDetails(v []PayOptionDetail) {
	o.PayOptionDetails = v
}

// GetAdditionalInfo returns the AdditionalInfo field value
func (o *IPGPaymentRequest) GetAdditionalInfo() IPGPaymentRequestAdditionalInfo {
	if o == nil {
		var ret IPGPaymentRequestAdditionalInfo
		return ret
	}

	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetAdditionalInfoOk() (*IPGPaymentRequestAdditionalInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalInfo, true
}

// SetAdditionalInfo sets field value
func (o *IPGPaymentRequest) SetAdditionalInfo(v IPGPaymentRequestAdditionalInfo) {
	o.AdditionalInfo = v
}

// GetUrlParams returns the UrlParams field value if set, zero value otherwise.
func (o *IPGPaymentRequest) GetUrlParams() []UrlParam {
	if o == nil || utils.IsNil(o.UrlParams) {
		var ret []UrlParam
		return ret
	}
	return o.UrlParams
}

// GetUrlParamsOk returns a tuple with the UrlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPGPaymentRequest) GetUrlParamsOk() ([]UrlParam, bool) {
	if o == nil || utils.IsNil(o.UrlParams) {
		return nil, false
	}
	return o.UrlParams, true
}

// HasUrlParams returns a boolean if a field has been set.
func (o *IPGPaymentRequest) HasUrlParams() bool {
	if o != nil && !utils.IsNil(o.UrlParams) {
		return true
	}

	return false
}

// SetUrlParams gets a reference to the given []UrlParam and assigns it to the UrlParams field.
func (o *IPGPaymentRequest) SetUrlParams(v []UrlParam) {
	o.UrlParams = v
}

func (o IPGPaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPGPaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["partnerReferenceNo"] = o.PartnerReferenceNo
	toSerialize["merchantId"] = o.MerchantId
	if !utils.IsNil(o.SubMerchantId) {
		toSerialize["subMerchantId"] = o.SubMerchantId
	}
	toSerialize["amount"] = o.Amount
	if !utils.IsNil(o.ExternalStoreId) {
		toSerialize["externalStoreId"] = o.ExternalStoreId
	}
	if !utils.IsNil(o.ValidUpTo) {
		toSerialize["validUpTo"] = o.ValidUpTo
	}
	if !utils.IsNil(o.PointOfInitiation) {
		toSerialize["pointOfInitiation"] = o.PointOfInitiation
	}
	if !utils.IsNil(o.DisabledPayMethods) {
		toSerialize["disabledPayMethods"] = o.DisabledPayMethods
	}
	if !utils.IsNil(o.PayOptionDetails) {
		toSerialize["payOptionDetails"] = o.PayOptionDetails
	}
	toSerialize["additionalInfo"] = o.AdditionalInfo
	if !utils.IsNil(o.UrlParams) {
		toSerialize["urlParams"] = o.UrlParams
	}
	return toSerialize, nil
}

func (o *IPGPaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"partnerReferenceNo",
		"merchantId",
		"amount",
		"additionalInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIPGPaymentRequest := _IPGPaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIPGPaymentRequest)

	if err != nil {
		return err
	}

	*o = IPGPaymentRequest(varIPGPaymentRequest)

	return err
}

type NullableIPGPaymentRequest struct {
	value *IPGPaymentRequest
	isSet bool
}

func (v NullableIPGPaymentRequest) Get() *IPGPaymentRequest {
	return v.value
}

func (v *NullableIPGPaymentRequest) Set(val *IPGPaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIPGPaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIPGPaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPGPaymentRequest(val *IPGPaymentRequest) *NullableIPGPaymentRequest {
	return &NullableIPGPaymentRequest{value: val, isSet: true}
}

func (v NullableIPGPaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPGPaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


