/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package payment_gateway

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/go_client/utils"
)

// checks if the CreateOrderBaseAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateOrderBaseAdditionalInfo{}

// CreateOrderBaseAdditionalInfo struct for CreateOrderBaseAdditionalInfo
type CreateOrderBaseAdditionalInfo struct {
	// Additional information of merchant category code. This parameter is used to identify the type of business in which a merchant is engaged. Refer to Details of https://dashboard.dana.id/api-docs/read/197#OpenAPI-MerchantCategoryCode
	Mcc string `json:"mcc"`
	// Additional information of extend such as partner passthrough and risk information
	ExtendInfo *string `json:"extendInfo,omitempty"`
	// Additional information of environment info
	EnvInfo EnvInfo `json:"envInfo"`
}

type _CreateOrderBaseAdditionalInfo CreateOrderBaseAdditionalInfo

// NewCreateOrderBaseAdditionalInfo instantiates a new CreateOrderBaseAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderBaseAdditionalInfo(mcc string, envInfo EnvInfo) *CreateOrderBaseAdditionalInfo {
	this := CreateOrderBaseAdditionalInfo{}
	this.Mcc = mcc
	this.EnvInfo = envInfo
	return &this
}

// NewCreateOrderBaseAdditionalInfoWithDefaults instantiates a new CreateOrderBaseAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderBaseAdditionalInfoWithDefaults() *CreateOrderBaseAdditionalInfo {
	this := CreateOrderBaseAdditionalInfo{}
	return &this
}

// GetMcc returns the Mcc field value
func (o *CreateOrderBaseAdditionalInfo) GetMcc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value
// and a boolean to check if the value has been set.
func (o *CreateOrderBaseAdditionalInfo) GetMccOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mcc, true
}

// SetMcc sets field value
func (o *CreateOrderBaseAdditionalInfo) SetMcc(v string) {
	o.Mcc = v
}

// GetExtendInfo returns the ExtendInfo field value if set, zero value otherwise.
func (o *CreateOrderBaseAdditionalInfo) GetExtendInfo() string {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		var ret string
		return ret
	}
	return *o.ExtendInfo
}

// GetExtendInfoOk returns a tuple with the ExtendInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderBaseAdditionalInfo) GetExtendInfoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		return nil, false
	}
	return o.ExtendInfo, true
}

// HasExtendInfo returns a boolean if a field has been set.
func (o *CreateOrderBaseAdditionalInfo) HasExtendInfo() bool {
	if o != nil && !utils.IsNil(o.ExtendInfo) {
		return true
	}

	return false
}

// SetExtendInfo gets a reference to the given string and assigns it to the ExtendInfo field.
func (o *CreateOrderBaseAdditionalInfo) SetExtendInfo(v string) {
	o.ExtendInfo = &v
}

// GetEnvInfo returns the EnvInfo field value
func (o *CreateOrderBaseAdditionalInfo) GetEnvInfo() EnvInfo {
	if o == nil {
		var ret EnvInfo
		return ret
	}

	return o.EnvInfo
}

// GetEnvInfoOk returns a tuple with the EnvInfo field value
// and a boolean to check if the value has been set.
func (o *CreateOrderBaseAdditionalInfo) GetEnvInfoOk() (*EnvInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvInfo, true
}

// SetEnvInfo sets field value
func (o *CreateOrderBaseAdditionalInfo) SetEnvInfo(v EnvInfo) {
	o.EnvInfo = v
}

func (o CreateOrderBaseAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderBaseAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mcc"] = o.Mcc
	if !utils.IsNil(o.ExtendInfo) {
		toSerialize["extendInfo"] = o.ExtendInfo
	}
	toSerialize["envInfo"] = o.EnvInfo
	return toSerialize, nil
}

func (o *CreateOrderBaseAdditionalInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mcc",
		"envInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrderBaseAdditionalInfo := _CreateOrderBaseAdditionalInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrderBaseAdditionalInfo)

	if err != nil {
		return err
	}

	*o = CreateOrderBaseAdditionalInfo(varCreateOrderBaseAdditionalInfo)

	return err
}

type NullableCreateOrderBaseAdditionalInfo struct {
	value *CreateOrderBaseAdditionalInfo
	isSet bool
}

func (v NullableCreateOrderBaseAdditionalInfo) Get() *CreateOrderBaseAdditionalInfo {
	return v.value
}

func (v *NullableCreateOrderBaseAdditionalInfo) Set(val *CreateOrderBaseAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderBaseAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderBaseAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderBaseAdditionalInfo(val *CreateOrderBaseAdditionalInfo) *NullableCreateOrderBaseAdditionalInfo {
	return &NullableCreateOrderBaseAdditionalInfo{value: val, isSet: true}
}

func (v NullableCreateOrderBaseAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderBaseAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


