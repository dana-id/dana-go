// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the QueryPaymentResponseAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &QueryPaymentResponseAdditionalInfo{}

// QueryPaymentResponseAdditionalInfo struct for QueryPaymentResponseAdditionalInfo
type QueryPaymentResponseAdditionalInfo struct {
	// Additional information of buyer
	Buyer *Buyer `json:"buyer,omitempty"`
	// Additional information of seller
	Seller *Seller `json:"seller,omitempty"`
	// Additional information of amount detail. Present if transaction found
	AmountDetail *AmountDetail `json:"amountDetail,omitempty"`
	// Additional information of time detail. Present if transaction found
	TimeDetail *TimeDetail `json:"timeDetail,omitempty"`
	// Additional information of goods
	Goods []Goods `json:"goods,omitempty"`
	// Additional information of shipping
	ShippingInfo []ShippingInfo `json:"shippingInfo,omitempty"`
	// Additional information of memo
	OrderMemo *string `json:"orderMemo,omitempty"`
	// Additional information of payment views. Present if transaction found
	PaymentViews []PaymentView `json:"paymentViews,omitempty"`
	// Additional information of extend
	ExtendInfo *string `json:"extendInfo,omitempty"`
	// Additional information of status detail
	StatusDetail *StatusDetail `json:"statusDetail,omitempty"`
	// Additional information of close reason
	CloseReason *string `json:"closeReason,omitempty"`
	// Additional information of virtual account. Only use for Payment Gateway service
	VirtualAccountInfo *VirtualAccountInfo `json:"virtualAccountInfo,omitempty"`
	// Merchant identifier
	MerchantId *string `json:"merchantId,omitempty"`
}

// NewQueryPaymentResponseAdditionalInfo instantiates a new QueryPaymentResponseAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryPaymentResponseAdditionalInfo() *QueryPaymentResponseAdditionalInfo {
	this := QueryPaymentResponseAdditionalInfo{}
	return &this
}

// NewQueryPaymentResponseAdditionalInfoWithDefaults instantiates a new QueryPaymentResponseAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryPaymentResponseAdditionalInfoWithDefaults() *QueryPaymentResponseAdditionalInfo {
	this := QueryPaymentResponseAdditionalInfo{}
	return &this
}

// GetBuyer returns the Buyer field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetBuyer() Buyer {
	if o == nil || utils.IsNil(o.Buyer) {
		var ret Buyer
		return ret
	}
	return *o.Buyer
}

// GetBuyerOk returns a tuple with the Buyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetBuyerOk() (*Buyer, bool) {
	if o == nil || utils.IsNil(o.Buyer) {
		return nil, false
	}
	return o.Buyer, true
}

// HasBuyer returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasBuyer() bool {
	if o != nil && !utils.IsNil(o.Buyer) {
		return true
	}

	return false
}

// SetBuyer gets a reference to the given Buyer and assigns it to the Buyer field.
func (o *QueryPaymentResponseAdditionalInfo) SetBuyer(v Buyer) {

	o.Buyer = &v
}

// GetSeller returns the Seller field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetSeller() Seller {
	if o == nil || utils.IsNil(o.Seller) {
		var ret Seller
		return ret
	}
	return *o.Seller
}

// GetSellerOk returns a tuple with the Seller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetSellerOk() (*Seller, bool) {
	if o == nil || utils.IsNil(o.Seller) {
		return nil, false
	}
	return o.Seller, true
}

// HasSeller returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasSeller() bool {
	if o != nil && !utils.IsNil(o.Seller) {
		return true
	}

	return false
}

// SetSeller gets a reference to the given Seller and assigns it to the Seller field.
func (o *QueryPaymentResponseAdditionalInfo) SetSeller(v Seller) {

	o.Seller = &v
}

// GetAmountDetail returns the AmountDetail field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetAmountDetail() AmountDetail {
	if o == nil || utils.IsNil(o.AmountDetail) {
		var ret AmountDetail
		return ret
	}
	return *o.AmountDetail
}

// GetAmountDetailOk returns a tuple with the AmountDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetAmountDetailOk() (*AmountDetail, bool) {
	if o == nil || utils.IsNil(o.AmountDetail) {
		return nil, false
	}
	return o.AmountDetail, true
}

// HasAmountDetail returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasAmountDetail() bool {
	if o != nil && !utils.IsNil(o.AmountDetail) {
		return true
	}

	return false
}

// SetAmountDetail gets a reference to the given AmountDetail and assigns it to the AmountDetail field.
func (o *QueryPaymentResponseAdditionalInfo) SetAmountDetail(v AmountDetail) {

	o.AmountDetail = &v
}

// GetTimeDetail returns the TimeDetail field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetTimeDetail() TimeDetail {
	if o == nil || utils.IsNil(o.TimeDetail) {
		var ret TimeDetail
		return ret
	}
	return *o.TimeDetail
}

// GetTimeDetailOk returns a tuple with the TimeDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetTimeDetailOk() (*TimeDetail, bool) {
	if o == nil || utils.IsNil(o.TimeDetail) {
		return nil, false
	}
	return o.TimeDetail, true
}

// HasTimeDetail returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasTimeDetail() bool {
	if o != nil && !utils.IsNil(o.TimeDetail) {
		return true
	}

	return false
}

// SetTimeDetail gets a reference to the given TimeDetail and assigns it to the TimeDetail field.
func (o *QueryPaymentResponseAdditionalInfo) SetTimeDetail(v TimeDetail) {

	o.TimeDetail = &v
}

// GetGoods returns the Goods field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetGoods() []Goods {
	if o == nil || utils.IsNil(o.Goods) {
		var ret []Goods
		return ret
	}
	return o.Goods
}

// GetGoodsOk returns a tuple with the Goods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetGoodsOk() ([]Goods, bool) {
	if o == nil || utils.IsNil(o.Goods) {
		return nil, false
	}
	return o.Goods, true
}

// HasGoods returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasGoods() bool {
	if o != nil && !utils.IsNil(o.Goods) {
		return true
	}

	return false
}

// SetGoods gets a reference to the given []Goods and assigns it to the Goods field.
func (o *QueryPaymentResponseAdditionalInfo) SetGoods(v []Goods) {

	o.Goods = v
}

// GetShippingInfo returns the ShippingInfo field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetShippingInfo() []ShippingInfo {
	if o == nil || utils.IsNil(o.ShippingInfo) {
		var ret []ShippingInfo
		return ret
	}
	return o.ShippingInfo
}

// GetShippingInfoOk returns a tuple with the ShippingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetShippingInfoOk() ([]ShippingInfo, bool) {
	if o == nil || utils.IsNil(o.ShippingInfo) {
		return nil, false
	}
	return o.ShippingInfo, true
}

// HasShippingInfo returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasShippingInfo() bool {
	if o != nil && !utils.IsNil(o.ShippingInfo) {
		return true
	}

	return false
}

// SetShippingInfo gets a reference to the given []ShippingInfo and assigns it to the ShippingInfo field.
func (o *QueryPaymentResponseAdditionalInfo) SetShippingInfo(v []ShippingInfo) {

	o.ShippingInfo = v
}

// GetOrderMemo returns the OrderMemo field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetOrderMemo() string {
	if o == nil || utils.IsNil(o.OrderMemo) {
		var ret string
		return ret
	}
	return *o.OrderMemo
}

// GetOrderMemoOk returns a tuple with the OrderMemo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetOrderMemoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OrderMemo) {
		return nil, false
	}
	return o.OrderMemo, true
}

// HasOrderMemo returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasOrderMemo() bool {
	if o != nil && !utils.IsNil(o.OrderMemo) {
		return true
	}

	return false
}

// SetOrderMemo gets a reference to the given string and assigns it to the OrderMemo field.
func (o *QueryPaymentResponseAdditionalInfo) SetOrderMemo(v string) {

	o.OrderMemo = &v
}

// GetPaymentViews returns the PaymentViews field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetPaymentViews() []PaymentView {
	if o == nil || utils.IsNil(o.PaymentViews) {
		var ret []PaymentView
		return ret
	}
	return o.PaymentViews
}

// GetPaymentViewsOk returns a tuple with the PaymentViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetPaymentViewsOk() ([]PaymentView, bool) {
	if o == nil || utils.IsNil(o.PaymentViews) {
		return nil, false
	}
	return o.PaymentViews, true
}

// HasPaymentViews returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasPaymentViews() bool {
	if o != nil && !utils.IsNil(o.PaymentViews) {
		return true
	}

	return false
}

// SetPaymentViews gets a reference to the given []PaymentView and assigns it to the PaymentViews field.
func (o *QueryPaymentResponseAdditionalInfo) SetPaymentViews(v []PaymentView) {

	o.PaymentViews = v
}

// GetExtendInfo returns the ExtendInfo field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetExtendInfo() string {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		var ret string
		return ret
	}
	return *o.ExtendInfo
}

// GetExtendInfoOk returns a tuple with the ExtendInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetExtendInfoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExtendInfo) {
		return nil, false
	}
	return o.ExtendInfo, true
}

// HasExtendInfo returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasExtendInfo() bool {
	if o != nil && !utils.IsNil(o.ExtendInfo) {
		return true
	}

	return false
}

// SetExtendInfo gets a reference to the given string and assigns it to the ExtendInfo field.
func (o *QueryPaymentResponseAdditionalInfo) SetExtendInfo(v string) {

	o.ExtendInfo = &v
}

// GetStatusDetail returns the StatusDetail field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetStatusDetail() StatusDetail {
	if o == nil || utils.IsNil(o.StatusDetail) {
		var ret StatusDetail
		return ret
	}
	return *o.StatusDetail
}

// GetStatusDetailOk returns a tuple with the StatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetStatusDetailOk() (*StatusDetail, bool) {
	if o == nil || utils.IsNil(o.StatusDetail) {
		return nil, false
	}
	return o.StatusDetail, true
}

// HasStatusDetail returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasStatusDetail() bool {
	if o != nil && !utils.IsNil(o.StatusDetail) {
		return true
	}

	return false
}

// SetStatusDetail gets a reference to the given StatusDetail and assigns it to the StatusDetail field.
func (o *QueryPaymentResponseAdditionalInfo) SetStatusDetail(v StatusDetail) {

	o.StatusDetail = &v
}

// GetCloseReason returns the CloseReason field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetCloseReason() string {
	if o == nil || utils.IsNil(o.CloseReason) {
		var ret string
		return ret
	}
	return *o.CloseReason
}

// GetCloseReasonOk returns a tuple with the CloseReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetCloseReasonOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CloseReason) {
		return nil, false
	}
	return o.CloseReason, true
}

// HasCloseReason returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasCloseReason() bool {
	if o != nil && !utils.IsNil(o.CloseReason) {
		return true
	}

	return false
}

// SetCloseReason gets a reference to the given string and assigns it to the CloseReason field.
func (o *QueryPaymentResponseAdditionalInfo) SetCloseReason(v string) {

	o.CloseReason = &v
}

// GetVirtualAccountInfo returns the VirtualAccountInfo field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetVirtualAccountInfo() VirtualAccountInfo {
	if o == nil || utils.IsNil(o.VirtualAccountInfo) {
		var ret VirtualAccountInfo
		return ret
	}
	return *o.VirtualAccountInfo
}

// GetVirtualAccountInfoOk returns a tuple with the VirtualAccountInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetVirtualAccountInfoOk() (*VirtualAccountInfo, bool) {
	if o == nil || utils.IsNil(o.VirtualAccountInfo) {
		return nil, false
	}
	return o.VirtualAccountInfo, true
}

// HasVirtualAccountInfo returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasVirtualAccountInfo() bool {
	if o != nil && !utils.IsNil(o.VirtualAccountInfo) {
		return true
	}

	return false
}

// SetVirtualAccountInfo gets a reference to the given VirtualAccountInfo and assigns it to the VirtualAccountInfo field.
func (o *QueryPaymentResponseAdditionalInfo) SetVirtualAccountInfo(v VirtualAccountInfo) {

	o.VirtualAccountInfo = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *QueryPaymentResponseAdditionalInfo) GetMerchantId() string {
	if o == nil || utils.IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponseAdditionalInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *QueryPaymentResponseAdditionalInfo) HasMerchantId() bool {
	if o != nil && !utils.IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *QueryPaymentResponseAdditionalInfo) SetMerchantId(v string) {

	o.MerchantId = &v
}

func (o QueryPaymentResponseAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryPaymentResponseAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Buyer) {
		toSerialize["buyer"] = o.Buyer
	}
	if !utils.IsNil(o.Seller) {
		toSerialize["seller"] = o.Seller
	}
	if !utils.IsNil(o.AmountDetail) {
		toSerialize["amountDetail"] = o.AmountDetail
	}
	if !utils.IsNil(o.TimeDetail) {
		toSerialize["timeDetail"] = o.TimeDetail
	}
	if !utils.IsNil(o.Goods) {
		toSerialize["goods"] = o.Goods
	}
	if !utils.IsNil(o.ShippingInfo) {
		toSerialize["shippingInfo"] = o.ShippingInfo
	}
	if !utils.IsNil(o.OrderMemo) {
		toSerialize["orderMemo"] = o.OrderMemo
	}
	if !utils.IsNil(o.PaymentViews) {
		toSerialize["paymentViews"] = o.PaymentViews
	}
	if !utils.IsNil(o.ExtendInfo) {
		toSerialize["extendInfo"] = o.ExtendInfo
	}
	if !utils.IsNil(o.StatusDetail) {
		toSerialize["statusDetail"] = o.StatusDetail
	}
	if !utils.IsNil(o.CloseReason) {
		toSerialize["closeReason"] = o.CloseReason
	}
	if !utils.IsNil(o.VirtualAccountInfo) {
		toSerialize["virtualAccountInfo"] = o.VirtualAccountInfo
	}
	if !utils.IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	return toSerialize, nil
}

type NullableQueryPaymentResponseAdditionalInfo struct {
	value *QueryPaymentResponseAdditionalInfo
	isSet bool
}

func (v NullableQueryPaymentResponseAdditionalInfo) Get() *QueryPaymentResponseAdditionalInfo {
	return v.value
}

func (v *NullableQueryPaymentResponseAdditionalInfo) Set(val *QueryPaymentResponseAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryPaymentResponseAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryPaymentResponseAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryPaymentResponseAdditionalInfo(val *QueryPaymentResponseAdditionalInfo) *NullableQueryPaymentResponseAdditionalInfo {
	return &NullableQueryPaymentResponseAdditionalInfo{value: val, isSet: true}
}

func (v NullableQueryPaymentResponseAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryPaymentResponseAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


