// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the ConsultPayResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ConsultPayResponse{}

// ConsultPayResponse struct for ConsultPayResponse
type ConsultPayResponse struct {
	// Response code. Refer to https://dashboard.dana.id/api-docs/read/237#paymentgatewayprod-ConsultPay-ResponseCodeandMessage
	ResponseCode *string `json:"responseCode,omitempty"`
	// Response message. Refer to https://dashboard.dana.id/api-docs/read/237#paymentgatewayprod-ConsultPay-ResponseCodeandMessage
	ResponseMessage *string `json:"responseMessage,omitempty"`
	// Define list of payment information that includes payment method and payment option for transaction
	PaymentInfos []ConsultPayPaymentInfo `json:"paymentInfos,omitempty"`
}

// NewConsultPayResponse instantiates a new ConsultPayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsultPayResponse() *ConsultPayResponse {
	this := ConsultPayResponse{}
	return &this
}

// NewConsultPayResponseWithDefaults instantiates a new ConsultPayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsultPayResponseWithDefaults() *ConsultPayResponse {
	this := ConsultPayResponse{}
	return &this
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *ConsultPayResponse) GetResponseCode() string {
	if o == nil || utils.IsNil(o.ResponseCode) {
		var ret string
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsultPayResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ResponseCode) {
		return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *ConsultPayResponse) HasResponseCode() bool {
	if o != nil && !utils.IsNil(o.ResponseCode) {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given string and assigns it to the ResponseCode field.
func (o *ConsultPayResponse) SetResponseCode(v string) {

	o.ResponseCode = &v
}

// GetResponseMessage returns the ResponseMessage field value if set, zero value otherwise.
func (o *ConsultPayResponse) GetResponseMessage() string {
	if o == nil || utils.IsNil(o.ResponseMessage) {
		var ret string
		return ret
	}
	return *o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsultPayResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ResponseMessage) {
		return nil, false
	}
	return o.ResponseMessage, true
}

// HasResponseMessage returns a boolean if a field has been set.
func (o *ConsultPayResponse) HasResponseMessage() bool {
	if o != nil && !utils.IsNil(o.ResponseMessage) {
		return true
	}

	return false
}

// SetResponseMessage gets a reference to the given string and assigns it to the ResponseMessage field.
func (o *ConsultPayResponse) SetResponseMessage(v string) {

	o.ResponseMessage = &v
}

// GetPaymentInfos returns the PaymentInfos field value if set, zero value otherwise.
func (o *ConsultPayResponse) GetPaymentInfos() []ConsultPayPaymentInfo {
	if o == nil || utils.IsNil(o.PaymentInfos) {
		var ret []ConsultPayPaymentInfo
		return ret
	}
	return o.PaymentInfos
}

// GetPaymentInfosOk returns a tuple with the PaymentInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsultPayResponse) GetPaymentInfosOk() ([]ConsultPayPaymentInfo, bool) {
	if o == nil || utils.IsNil(o.PaymentInfos) {
		return nil, false
	}
	return o.PaymentInfos, true
}

// HasPaymentInfos returns a boolean if a field has been set.
func (o *ConsultPayResponse) HasPaymentInfos() bool {
	if o != nil && !utils.IsNil(o.PaymentInfos) {
		return true
	}

	return false
}

// SetPaymentInfos gets a reference to the given []ConsultPayPaymentInfo and assigns it to the PaymentInfos field.
func (o *ConsultPayResponse) SetPaymentInfos(v []ConsultPayPaymentInfo) {

	o.PaymentInfos = v
}

func (o ConsultPayResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsultPayResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ResponseCode) {
		toSerialize["responseCode"] = o.ResponseCode
	}
	if !utils.IsNil(o.ResponseMessage) {
		toSerialize["responseMessage"] = o.ResponseMessage
	}
	if !utils.IsNil(o.PaymentInfos) {
		toSerialize["paymentInfos"] = o.PaymentInfos
	}
	return toSerialize, nil
}

type NullableConsultPayResponse struct {
	value *ConsultPayResponse
	isSet bool
}

func (v NullableConsultPayResponse) Get() *ConsultPayResponse {
	return v.value
}

func (v *NullableConsultPayResponse) Set(val *ConsultPayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConsultPayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConsultPayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsultPayResponse(val *ConsultPayResponse) *NullableConsultPayResponse {
	return &NullableConsultPayResponse{value: val, isSet: true}
}

func (v NullableConsultPayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsultPayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


