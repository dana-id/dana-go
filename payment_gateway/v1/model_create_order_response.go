/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package payment_gateway

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go-api-client/utils"
)

// checks if the CreateOrderResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateOrderResponse{}

// CreateOrderResponse struct for CreateOrderResponse
type CreateOrderResponse struct {
	// Response code for the transaction result. Example values include:<br> * 2005400 - Successful<br> * 4005400 - Bad Request - Retry request with proper parameter<br> * 4005401 - Invalid Field Format - Retry request with proper parameter<br> * 4005402 - Invalid Mandatory Field - Retry request with proper parameter<br> * 4015400 - Unauthorized. Invalid Signature - Retry request with proper parameter<br> * 4035402 - Exceeds Transaction Amount Limit - Try to adjust the order amount<br> * 4035405 - Do Not Honor - Retry request with proper parameter or can contact DANA to check the user/account status<br> * 4035415 - Transaction Not Permitted - Retry request periodically or consult to DANA<br> * 4045408 - Invalid Merchant - Retry request with proper parameter<br> * 4045418 - Inconsistent Request - Retry with proper parameter<br> * 4295400 - Too Many Requests - Retry request periodically by sending same request payload<br> * 5005400 - General Error - Retry request periodically<br> * 5005401 - Internal Server Error - Retry request periodically by sending same request payload<br> 
	ResponseCode string `json:"responseCode"`
	// Message corresponding to the response code
	ResponseMessage string `json:"responseMessage"`
	// Transaction identifier on DANA system (present if successfully processed)
	ReferenceNo *string `json:"referenceNo,omitempty"`
	// Transaction identifier on partner system
	PartnerReferenceNo string `json:"partnerReferenceNo"`
	// Checkout URL (present if payment method is not OVO/Virtual Account/QRIS)
	WebRedirectUrl *string `json:"webRedirectUrl,omitempty"`
	AdditionalInfo *CreateOrderResponseAdditionalInfo `json:"additionalInfo,omitempty"`
}

type _CreateOrderResponse CreateOrderResponse

// NewCreateOrderResponse instantiates a new CreateOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderResponse(responseCode string, responseMessage string, partnerReferenceNo string) *CreateOrderResponse {
	this := CreateOrderResponse{}
	this.ResponseCode = responseCode
	this.ResponseMessage = responseMessage
	this.PartnerReferenceNo = partnerReferenceNo
	return &this
}

// NewCreateOrderResponseWithDefaults instantiates a new CreateOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderResponseWithDefaults() *CreateOrderResponse {
	this := CreateOrderResponse{}
	return &this
}

// GetResponseCode returns the ResponseCode field value
func (o *CreateOrderResponse) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *CreateOrderResponse) SetResponseCode(v string) {
	o.ResponseCode = v
}

// GetResponseMessage returns the ResponseMessage field value
func (o *CreateOrderResponse) GetResponseMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseMessage, true
}

// SetResponseMessage sets field value
func (o *CreateOrderResponse) SetResponseMessage(v string) {
	o.ResponseMessage = v
}

// GetReferenceNo returns the ReferenceNo field value if set, zero value otherwise.
func (o *CreateOrderResponse) GetReferenceNo() string {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		var ret string
		return ret
	}
	return *o.ReferenceNo
}

// GetReferenceNoOk returns a tuple with the ReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReferenceNo) {
		return nil, false
	}
	return o.ReferenceNo, true
}

// HasReferenceNo returns a boolean if a field has been set.
func (o *CreateOrderResponse) HasReferenceNo() bool {
	if o != nil && !utils.IsNil(o.ReferenceNo) {
		return true
	}

	return false
}

// SetReferenceNo gets a reference to the given string and assigns it to the ReferenceNo field.
func (o *CreateOrderResponse) SetReferenceNo(v string) {
	o.ReferenceNo = &v
}

// GetPartnerReferenceNo returns the PartnerReferenceNo field value
func (o *CreateOrderResponse) GetPartnerReferenceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerReferenceNo
}

// GetPartnerReferenceNoOk returns a tuple with the PartnerReferenceNo field value
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetPartnerReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerReferenceNo, true
}

// SetPartnerReferenceNo sets field value
func (o *CreateOrderResponse) SetPartnerReferenceNo(v string) {
	o.PartnerReferenceNo = v
}

// GetWebRedirectUrl returns the WebRedirectUrl field value if set, zero value otherwise.
func (o *CreateOrderResponse) GetWebRedirectUrl() string {
	if o == nil || utils.IsNil(o.WebRedirectUrl) {
		var ret string
		return ret
	}
	return *o.WebRedirectUrl
}

// GetWebRedirectUrlOk returns a tuple with the WebRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetWebRedirectUrlOk() (*string, bool) {
	if o == nil || utils.IsNil(o.WebRedirectUrl) {
		return nil, false
	}
	return o.WebRedirectUrl, true
}

// HasWebRedirectUrl returns a boolean if a field has been set.
func (o *CreateOrderResponse) HasWebRedirectUrl() bool {
	if o != nil && !utils.IsNil(o.WebRedirectUrl) {
		return true
	}

	return false
}

// SetWebRedirectUrl gets a reference to the given string and assigns it to the WebRedirectUrl field.
func (o *CreateOrderResponse) SetWebRedirectUrl(v string) {
	o.WebRedirectUrl = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *CreateOrderResponse) GetAdditionalInfo() CreateOrderResponseAdditionalInfo {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret CreateOrderResponseAdditionalInfo
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponse) GetAdditionalInfoOk() (*CreateOrderResponseAdditionalInfo, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *CreateOrderResponse) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given CreateOrderResponseAdditionalInfo and assigns it to the AdditionalInfo field.
func (o *CreateOrderResponse) SetAdditionalInfo(v CreateOrderResponseAdditionalInfo) {
	o.AdditionalInfo = &v
}

func (o CreateOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseCode"] = o.ResponseCode
	toSerialize["responseMessage"] = o.ResponseMessage
	if !utils.IsNil(o.ReferenceNo) {
		toSerialize["referenceNo"] = o.ReferenceNo
	}
	toSerialize["partnerReferenceNo"] = o.PartnerReferenceNo
	if !utils.IsNil(o.WebRedirectUrl) {
		toSerialize["webRedirectUrl"] = o.WebRedirectUrl
	}
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *CreateOrderResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responseCode",
		"responseMessage",
		"partnerReferenceNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrderResponse := _CreateOrderResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrderResponse)

	if err != nil {
		return err
	}

	*o = CreateOrderResponse(varCreateOrderResponse)

	return err
}

type NullableCreateOrderResponse struct {
	value *CreateOrderResponse
	isSet bool
}

func (v NullableCreateOrderResponse) Get() *CreateOrderResponse {
	return v.value
}

func (v *NullableCreateOrderResponse) Set(val *CreateOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderResponse(val *CreateOrderResponse) *NullableCreateOrderResponse {
	return &NullableCreateOrderResponse{value: val, isSet: true}
}

func (v NullableCreateOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


