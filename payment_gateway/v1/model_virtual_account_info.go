// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the VirtualAccountInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &VirtualAccountInfo{}

// VirtualAccountInfo struct for VirtualAccountInfo
type VirtualAccountInfo struct {
	// Virtual account code. Present if successfully processed and payment method is VIRTUAL_ACCOUNT
	VirtualAccountCode *string `json:"virtualAccountCode,omitempty"`
	// Expiry time of virtual account, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if successfully processed and payment method is VIRTUAL_ACCOUNT
	VirtualAccountExpiryTime *string `json:"virtualAccountExpiryTime,omitempty" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\+07:00$"`
	// Signature of virtual account. Present if successfully processed and payment method is VIRTUAL_ACCOUNT
	Signature *string `json:"signature,omitempty"`
}

// NewVirtualAccountInfo instantiates a new VirtualAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualAccountInfo() *VirtualAccountInfo {
	this := VirtualAccountInfo{}
	return &this
}

// NewVirtualAccountInfoWithDefaults instantiates a new VirtualAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualAccountInfoWithDefaults() *VirtualAccountInfo {
	this := VirtualAccountInfo{}
	return &this
}

// GetVirtualAccountCode returns the VirtualAccountCode field value if set, zero value otherwise.
func (o *VirtualAccountInfo) GetVirtualAccountCode() string {
	if o == nil || utils.IsNil(o.VirtualAccountCode) {
		var ret string
		return ret
	}
	return *o.VirtualAccountCode
}

// GetVirtualAccountCodeOk returns a tuple with the VirtualAccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetVirtualAccountCodeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.VirtualAccountCode) {
		return nil, false
	}
	return o.VirtualAccountCode, true
}

// HasVirtualAccountCode returns a boolean if a field has been set.
func (o *VirtualAccountInfo) HasVirtualAccountCode() bool {
	if o != nil && !utils.IsNil(o.VirtualAccountCode) {
		return true
	}

	return false
}

// SetVirtualAccountCode gets a reference to the given string and assigns it to the VirtualAccountCode field.
func (o *VirtualAccountInfo) SetVirtualAccountCode(v string) {
	o.VirtualAccountCode = &v
}

// GetVirtualAccountExpiryTime returns the VirtualAccountExpiryTime field value if set, zero value otherwise.
func (o *VirtualAccountInfo) GetVirtualAccountExpiryTime() string {
	if o == nil || utils.IsNil(o.VirtualAccountExpiryTime) {
		var ret string
		return ret
	}
	return *o.VirtualAccountExpiryTime
}

// GetVirtualAccountExpiryTimeOk returns a tuple with the VirtualAccountExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetVirtualAccountExpiryTimeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.VirtualAccountExpiryTime) {
		return nil, false
	}
	return o.VirtualAccountExpiryTime, true
}

// HasVirtualAccountExpiryTime returns a boolean if a field has been set.
func (o *VirtualAccountInfo) HasVirtualAccountExpiryTime() bool {
	if o != nil && !utils.IsNil(o.VirtualAccountExpiryTime) {
		return true
	}

	return false
}

// SetVirtualAccountExpiryTime gets a reference to the given string and assigns it to the VirtualAccountExpiryTime field.
func (o *VirtualAccountInfo) SetVirtualAccountExpiryTime(v string) {
	o.VirtualAccountExpiryTime = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *VirtualAccountInfo) GetSignature() string {
	if o == nil || utils.IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualAccountInfo) GetSignatureOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *VirtualAccountInfo) HasSignature() bool {
	if o != nil && !utils.IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *VirtualAccountInfo) SetSignature(v string) {
	o.Signature = &v
}

func (o VirtualAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualAccountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.VirtualAccountCode) {
		toSerialize["virtualAccountCode"] = o.VirtualAccountCode
	}
	if !utils.IsNil(o.VirtualAccountExpiryTime) {
		toSerialize["virtualAccountExpiryTime"] = o.VirtualAccountExpiryTime
	}
	if !utils.IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	return toSerialize, nil
}

type NullableVirtualAccountInfo struct {
	value *VirtualAccountInfo
	isSet bool
}

func (v NullableVirtualAccountInfo) Get() *VirtualAccountInfo {
	return v.value
}

func (v *NullableVirtualAccountInfo) Set(val *VirtualAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualAccountInfo(val *VirtualAccountInfo) *NullableVirtualAccountInfo {
	return &NullableVirtualAccountInfo{value: val, isSet: true}
}

func (v NullableVirtualAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


