// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the PromoInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PromoInfo{}

// PromoInfo struct for PromoInfo
type PromoInfo struct {
	// Promo amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
	PromoAmount Money `json:"promoAmount"`
	// Promo identifier
	PromoId string `json:"promoId"`
	// Type's of promo, value always DIRECT_DISCOUNT
	PromoType string `json:"promoType"`
}

type _PromoInfo PromoInfo

// NewPromoInfo instantiates a new PromoInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoInfo(promoAmount Money, promoId string, promoType string) *PromoInfo {
	this := PromoInfo{}
	this.PromoAmount = promoAmount
	this.PromoId = promoId
	this.PromoType = promoType
	return &this
}

// NewPromoInfoWithDefaults instantiates a new PromoInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoInfoWithDefaults() *PromoInfo {
	this := PromoInfo{}
	var promoType string = "DIRECT_DISCOUNT"
	this.PromoType = promoType
	return &this
}

// GetPromoAmount returns the PromoAmount field value
func (o *PromoInfo) GetPromoAmount() Money {
	if o == nil {
		var ret Money
		return ret
	}

	return o.PromoAmount
}

// GetPromoAmountOk returns a tuple with the PromoAmount field value
// and a boolean to check if the value has been set.
func (o *PromoInfo) GetPromoAmountOk() (*Money, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoAmount, true
}

// SetPromoAmount sets field value
func (o *PromoInfo) SetPromoAmount(v Money) {

	o.PromoAmount = v
}

// GetPromoId returns the PromoId field value
func (o *PromoInfo) GetPromoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromoId
}

// GetPromoIdOk returns a tuple with the PromoId field value
// and a boolean to check if the value has been set.
func (o *PromoInfo) GetPromoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoId, true
}

// SetPromoId sets field value
func (o *PromoInfo) SetPromoId(v string) {

	o.PromoId = v
}

// GetPromoType returns the PromoType field value
func (o *PromoInfo) GetPromoType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromoType
}

// GetPromoTypeOk returns a tuple with the PromoType field value
// and a boolean to check if the value has been set.
func (o *PromoInfo) GetPromoTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoType, true
}

// SetPromoType sets field value
func (o *PromoInfo) SetPromoType(v string) {

	o.PromoType = v
}

func (o PromoInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["promoAmount"] = o.PromoAmount
	toSerialize["promoId"] = o.PromoId
	toSerialize["promoType"] = o.PromoType
	return toSerialize, nil
}

func (o *PromoInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"promoAmount",
		"promoId",
		"promoType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromoInfo := _PromoInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPromoInfo)

	if err != nil {
		return err
	}

	*o = PromoInfo(varPromoInfo)

	return err
}

type NullablePromoInfo struct {
	value *PromoInfo
	isSet bool
}

func (v NullablePromoInfo) Get() *PromoInfo {
	return v.value
}

func (v *NullablePromoInfo) Set(val *PromoInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoInfo(val *PromoInfo) *NullablePromoInfo {
	return &NullablePromoInfo{value: val, isSet: true}
}

func (v NullablePromoInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


