/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package payment_gateway

import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the ConsultPayPaymentInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ConsultPayPaymentInfo{}

// ConsultPayPaymentInfo struct for ConsultPayPaymentInfo
type ConsultPayPaymentInfo struct {
	// Payment method that used to payment. The enums:<br>   * BALANCE - Payment method with balance<br>   * COUPON - Payment method with coupon<br>   * NET_BANKING - Payment method with internet banking<br>   * CREDIT_CARD - Payment method with credit card<br>   * DEBIT_CARD - Payment method with debit card<br>   * VIRTUAL_ACCOUNT - Payment method with virtual account<br>   * OTC - Payment method with OTC<br>   * DIRECT_DEBIT_CREDIT_CARD - Payment method with direct debit of credit card<br>   * DIRECT_DEBIT_DEBIT_CARD - Payment method with direct debit of debit card<br>   * ONLINE_CREDIT - Payment method with online Credit<br>   * LOAN_CREDIT - Payment method with DANA Cicil<br>   * NETWORK_PAY - Payment method with e-wallet<br> 
	PayMethod string `json:"payMethod"`
	// Payment option that available to used to payment, depends on the payment method. The enums:<br>   * NETWORK_PAY_PG_SPAY - Payment method with ShopeePay e-wallet<br>   * NETWORK_PAY_PG_OVO - Payment method with OVO e-wallet<br>   * NETWORK_PAY_PG_GOPAY - Payment method with GoPay e-wallet<br>   * NETWORK_PAY_PG_LINKAJA - Payment method with LinkAja e-wallet<br>   * NETWORK_PAY_PG_CARD - Payment method with Card<br>   * VIRTUAL_ACCOUNT_BCA - Payment method with BCA virtual account<br>   * VIRTUAL_ACCOUNT_BNI - Payment method with BNI virtual account<br>   * VIRTUAL_ACCOUNT_MANDIRI - Payment method with Mandiri virtual account<br>   * VIRTUAL_ACCOUNT_BRI - Payment method with BRI virtual account<br>   * VIRTUAL_ACCOUNT_BTPN - Payment method with BTPN virtual account<br>   * VIRTUAL_ACCOUNT_CIMB - Payment method with CIMB virtual account<br>   * VIRTUAL_ACCOUNT_PERMATA - Payment method with Permata virtual account<br> 
	PayOption *string `json:"payOption,omitempty"`
	// Additional Information of promotion
	PromoInfos []PromoInfo `json:"promoInfos,omitempty"`
}

type _ConsultPayPaymentInfo ConsultPayPaymentInfo

// NewConsultPayPaymentInfo instantiates a new ConsultPayPaymentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsultPayPaymentInfo(payMethod string) *ConsultPayPaymentInfo {
	this := ConsultPayPaymentInfo{}
	this.PayMethod = payMethod
	return &this
}

// NewConsultPayPaymentInfoWithDefaults instantiates a new ConsultPayPaymentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsultPayPaymentInfoWithDefaults() *ConsultPayPaymentInfo {
	this := ConsultPayPaymentInfo{}
	return &this
}

// GetPayMethod returns the PayMethod field value
func (o *ConsultPayPaymentInfo) GetPayMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayMethod
}

// GetPayMethodOk returns a tuple with the PayMethod field value
// and a boolean to check if the value has been set.
func (o *ConsultPayPaymentInfo) GetPayMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayMethod, true
}

// SetPayMethod sets field value
func (o *ConsultPayPaymentInfo) SetPayMethod(v string) {
	o.PayMethod = v
}

// GetPayOption returns the PayOption field value if set, zero value otherwise.
func (o *ConsultPayPaymentInfo) GetPayOption() string {
	if o == nil || utils.IsNil(o.PayOption) {
		var ret string
		return ret
	}
	return *o.PayOption
}

// GetPayOptionOk returns a tuple with the PayOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsultPayPaymentInfo) GetPayOptionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PayOption) {
		return nil, false
	}
	return o.PayOption, true
}

// HasPayOption returns a boolean if a field has been set.
func (o *ConsultPayPaymentInfo) HasPayOption() bool {
	if o != nil && !utils.IsNil(o.PayOption) {
		return true
	}

	return false
}

// SetPayOption gets a reference to the given string and assigns it to the PayOption field.
func (o *ConsultPayPaymentInfo) SetPayOption(v string) {
	o.PayOption = &v
}

// GetPromoInfos returns the PromoInfos field value if set, zero value otherwise.
func (o *ConsultPayPaymentInfo) GetPromoInfos() []PromoInfo {
	if o == nil || utils.IsNil(o.PromoInfos) {
		var ret []PromoInfo
		return ret
	}
	return o.PromoInfos
}

// GetPromoInfosOk returns a tuple with the PromoInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsultPayPaymentInfo) GetPromoInfosOk() ([]PromoInfo, bool) {
	if o == nil || utils.IsNil(o.PromoInfos) {
		return nil, false
	}
	return o.PromoInfos, true
}

// HasPromoInfos returns a boolean if a field has been set.
func (o *ConsultPayPaymentInfo) HasPromoInfos() bool {
	if o != nil && !utils.IsNil(o.PromoInfos) {
		return true
	}

	return false
}

// SetPromoInfos gets a reference to the given []PromoInfo and assigns it to the PromoInfos field.
func (o *ConsultPayPaymentInfo) SetPromoInfos(v []PromoInfo) {
	o.PromoInfos = v
}

func (o ConsultPayPaymentInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsultPayPaymentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payMethod"] = o.PayMethod
	if !utils.IsNil(o.PayOption) {
		toSerialize["payOption"] = o.PayOption
	}
	if !utils.IsNil(o.PromoInfos) {
		toSerialize["promoInfos"] = o.PromoInfos
	}
	return toSerialize, nil
}

func (o *ConsultPayPaymentInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payMethod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsultPayPaymentInfo := _ConsultPayPaymentInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsultPayPaymentInfo)

	if err != nil {
		return err
	}

	*o = ConsultPayPaymentInfo(varConsultPayPaymentInfo)

	return err
}

type NullableConsultPayPaymentInfo struct {
	value *ConsultPayPaymentInfo
	isSet bool
}

func (v NullableConsultPayPaymentInfo) Get() *ConsultPayPaymentInfo {
	return v.value
}

func (v *NullableConsultPayPaymentInfo) Set(val *ConsultPayPaymentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConsultPayPaymentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConsultPayPaymentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsultPayPaymentInfo(val *ConsultPayPaymentInfo) *NullableConsultPayPaymentInfo {
	return &NullableConsultPayPaymentInfo{value: val, isSet: true}
}

func (v NullableConsultPayPaymentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsultPayPaymentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


