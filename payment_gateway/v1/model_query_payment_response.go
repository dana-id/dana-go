// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the QueryPaymentResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &QueryPaymentResponse{}

// QueryPaymentResponse struct for QueryPaymentResponse
type QueryPaymentResponse struct {
	// Response code. Refer to https://dashboard.dana.id/api-docs/read/126#HTML-API-QueryPayment-ResponseCodeandMessage
	ResponseCode string `json:"responseCode"`
	// Response message. Refer to https://dashboard.dana.id/api-docs/read/126#HTML-API-QueryPayment-ResponseCodeandMessage
	ResponseMessage string `json:"responseMessage"`
	// Original transaction identifier on partner system. Present if transaction found
	OriginalPartnerReferenceNo *string `json:"originalPartnerReferenceNo,omitempty"`
	// Original transaction identifier on DANA system. Present if transaction found
	OriginalReferenceNo *string `json:"originalReferenceNo,omitempty"`
	// Original external identifier on header message
	OriginalExternalId *string `json:"originalExternalId,omitempty"`
	// Transaction type indicator is based on the service code of the original transaction request:<br> - IPG Cashier Pay - SNAP: 54<br> - QRIS CPM (Acquirer) - SNAP: 60<br> - QRIS MPM (Acquirer) - SNAP: 47<br> - Payment Gateway: 54<br> 
	ServiceCode string `json:"serviceCode"`
	// Category code for the status of the transaction. The values include:<br> - 00 = Success, the order has been successfully in final state and paid<br> - 01 = Initiated, the order has been created, but has not been paid<br> - 02 = Paying, the order is in process, not in final state, payment is success<br> - 05 = Cancelled, the order has been closed<br> - 07 = Not found, the order is not found<br> 
	LatestTransactionStatus string `json:"latestTransactionStatus"`
	// Description of transaction status
	TransactionStatusDesc *string `json:"transactionStatusDesc,omitempty"`
	// Original response code
	OriginalResponseCode *string `json:"originalResponseCode,omitempty"`
	// Original response message
	OriginalResponseMessage *string `json:"originalResponseMessage,omitempty"`
	// Session identifier
	SessionId *string `json:"sessionId,omitempty"`
	// Transaction request identifier
	RequestID *string `json:"requestID,omitempty"`
	// Trans amount. Present if transaction found. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
	TransAmount *Money `json:"transAmount,omitempty"`
	// Amount. Present if transaction found. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
	Amount *Money `json:"amount,omitempty"`
	// Fee amount. Present if transaction found. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
	FeeAmount *Money `json:"feeAmount,omitempty"`
	// Transaction paid time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if transaction is paid
	PaidTime *string `json:"paidTime,omitempty" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\+07:00$"`
	// Brief description. Present if transaction found
	Title *string `json:"title,omitempty"`
	// Additional information
	AdditionalInfo *QueryPaymentResponseAdditionalInfo `json:"additionalInfo,omitempty"`
}

type _QueryPaymentResponse QueryPaymentResponse

// NewQueryPaymentResponse instantiates a new QueryPaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryPaymentResponse(responseCode string, responseMessage string, serviceCode string, latestTransactionStatus string) *QueryPaymentResponse {
	this := QueryPaymentResponse{}
	this.ResponseCode = responseCode
	this.ResponseMessage = responseMessage
	this.ServiceCode = serviceCode
	this.LatestTransactionStatus = latestTransactionStatus
	return &this
}

// NewQueryPaymentResponseWithDefaults instantiates a new QueryPaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryPaymentResponseWithDefaults() *QueryPaymentResponse {
	this := QueryPaymentResponse{}
	var serviceCode string = "54"
	this.ServiceCode = serviceCode
	return &this
}

// GetResponseCode returns the ResponseCode field value
func (o *QueryPaymentResponse) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *QueryPaymentResponse) SetResponseCode(v string) {

	o.ResponseCode = v
}

// GetResponseMessage returns the ResponseMessage field value
func (o *QueryPaymentResponse) GetResponseMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseMessage, true
}

// SetResponseMessage sets field value
func (o *QueryPaymentResponse) SetResponseMessage(v string) {

	o.ResponseMessage = v
}

// GetOriginalPartnerReferenceNo returns the OriginalPartnerReferenceNo field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetOriginalPartnerReferenceNo() string {
	if o == nil || utils.IsNil(o.OriginalPartnerReferenceNo) {
		var ret string
		return ret
	}
	return *o.OriginalPartnerReferenceNo
}

// GetOriginalPartnerReferenceNoOk returns a tuple with the OriginalPartnerReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetOriginalPartnerReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalPartnerReferenceNo) {
		return nil, false
	}
	return o.OriginalPartnerReferenceNo, true
}

// HasOriginalPartnerReferenceNo returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasOriginalPartnerReferenceNo() bool {
	if o != nil && !utils.IsNil(o.OriginalPartnerReferenceNo) {
		return true
	}

	return false
}

// SetOriginalPartnerReferenceNo gets a reference to the given string and assigns it to the OriginalPartnerReferenceNo field.
func (o *QueryPaymentResponse) SetOriginalPartnerReferenceNo(v string) {

	o.OriginalPartnerReferenceNo = &v
}

// GetOriginalReferenceNo returns the OriginalReferenceNo field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetOriginalReferenceNo() string {
	if o == nil || utils.IsNil(o.OriginalReferenceNo) {
		var ret string
		return ret
	}
	return *o.OriginalReferenceNo
}

// GetOriginalReferenceNoOk returns a tuple with the OriginalReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetOriginalReferenceNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalReferenceNo) {
		return nil, false
	}
	return o.OriginalReferenceNo, true
}

// HasOriginalReferenceNo returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasOriginalReferenceNo() bool {
	if o != nil && !utils.IsNil(o.OriginalReferenceNo) {
		return true
	}

	return false
}

// SetOriginalReferenceNo gets a reference to the given string and assigns it to the OriginalReferenceNo field.
func (o *QueryPaymentResponse) SetOriginalReferenceNo(v string) {

	o.OriginalReferenceNo = &v
}

// GetOriginalExternalId returns the OriginalExternalId field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetOriginalExternalId() string {
	if o == nil || utils.IsNil(o.OriginalExternalId) {
		var ret string
		return ret
	}
	return *o.OriginalExternalId
}

// GetOriginalExternalIdOk returns a tuple with the OriginalExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetOriginalExternalIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalExternalId) {
		return nil, false
	}
	return o.OriginalExternalId, true
}

// HasOriginalExternalId returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasOriginalExternalId() bool {
	if o != nil && !utils.IsNil(o.OriginalExternalId) {
		return true
	}

	return false
}

// SetOriginalExternalId gets a reference to the given string and assigns it to the OriginalExternalId field.
func (o *QueryPaymentResponse) SetOriginalExternalId(v string) {

	o.OriginalExternalId = &v
}

// GetServiceCode returns the ServiceCode field value
func (o *QueryPaymentResponse) GetServiceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceCode
}

// GetServiceCodeOk returns a tuple with the ServiceCode field value
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetServiceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceCode, true
}

// SetServiceCode sets field value
func (o *QueryPaymentResponse) SetServiceCode(v string) {

	o.ServiceCode = v
}

// GetLatestTransactionStatus returns the LatestTransactionStatus field value
func (o *QueryPaymentResponse) GetLatestTransactionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LatestTransactionStatus
}

// GetLatestTransactionStatusOk returns a tuple with the LatestTransactionStatus field value
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetLatestTransactionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestTransactionStatus, true
}

// SetLatestTransactionStatus sets field value
func (o *QueryPaymentResponse) SetLatestTransactionStatus(v string) {

	o.LatestTransactionStatus = v
}

// GetTransactionStatusDesc returns the TransactionStatusDesc field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetTransactionStatusDesc() string {
	if o == nil || utils.IsNil(o.TransactionStatusDesc) {
		var ret string
		return ret
	}
	return *o.TransactionStatusDesc
}

// GetTransactionStatusDescOk returns a tuple with the TransactionStatusDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetTransactionStatusDescOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TransactionStatusDesc) {
		return nil, false
	}
	return o.TransactionStatusDesc, true
}

// HasTransactionStatusDesc returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasTransactionStatusDesc() bool {
	if o != nil && !utils.IsNil(o.TransactionStatusDesc) {
		return true
	}

	return false
}

// SetTransactionStatusDesc gets a reference to the given string and assigns it to the TransactionStatusDesc field.
func (o *QueryPaymentResponse) SetTransactionStatusDesc(v string) {

	o.TransactionStatusDesc = &v
}

// GetOriginalResponseCode returns the OriginalResponseCode field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetOriginalResponseCode() string {
	if o == nil || utils.IsNil(o.OriginalResponseCode) {
		var ret string
		return ret
	}
	return *o.OriginalResponseCode
}

// GetOriginalResponseCodeOk returns a tuple with the OriginalResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetOriginalResponseCodeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalResponseCode) {
		return nil, false
	}
	return o.OriginalResponseCode, true
}

// HasOriginalResponseCode returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasOriginalResponseCode() bool {
	if o != nil && !utils.IsNil(o.OriginalResponseCode) {
		return true
	}

	return false
}

// SetOriginalResponseCode gets a reference to the given string and assigns it to the OriginalResponseCode field.
func (o *QueryPaymentResponse) SetOriginalResponseCode(v string) {

	o.OriginalResponseCode = &v
}

// GetOriginalResponseMessage returns the OriginalResponseMessage field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetOriginalResponseMessage() string {
	if o == nil || utils.IsNil(o.OriginalResponseMessage) {
		var ret string
		return ret
	}
	return *o.OriginalResponseMessage
}

// GetOriginalResponseMessageOk returns a tuple with the OriginalResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetOriginalResponseMessageOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OriginalResponseMessage) {
		return nil, false
	}
	return o.OriginalResponseMessage, true
}

// HasOriginalResponseMessage returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasOriginalResponseMessage() bool {
	if o != nil && !utils.IsNil(o.OriginalResponseMessage) {
		return true
	}

	return false
}

// SetOriginalResponseMessage gets a reference to the given string and assigns it to the OriginalResponseMessage field.
func (o *QueryPaymentResponse) SetOriginalResponseMessage(v string) {

	o.OriginalResponseMessage = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetSessionId() string {
	if o == nil || utils.IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetSessionIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasSessionId() bool {
	if o != nil && !utils.IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *QueryPaymentResponse) SetSessionId(v string) {

	o.SessionId = &v
}

// GetRequestID returns the RequestID field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetRequestID() string {
	if o == nil || utils.IsNil(o.RequestID) {
		var ret string
		return ret
	}
	return *o.RequestID
}

// GetRequestIDOk returns a tuple with the RequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetRequestIDOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RequestID) {
		return nil, false
	}
	return o.RequestID, true
}

// HasRequestID returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasRequestID() bool {
	if o != nil && !utils.IsNil(o.RequestID) {
		return true
	}

	return false
}

// SetRequestID gets a reference to the given string and assigns it to the RequestID field.
func (o *QueryPaymentResponse) SetRequestID(v string) {

	o.RequestID = &v
}

// GetTransAmount returns the TransAmount field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetTransAmount() Money {
	if o == nil || utils.IsNil(o.TransAmount) {
		var ret Money
		return ret
	}
	return *o.TransAmount
}

// GetTransAmountOk returns a tuple with the TransAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetTransAmountOk() (*Money, bool) {
	if o == nil || utils.IsNil(o.TransAmount) {
		return nil, false
	}
	return o.TransAmount, true
}

// HasTransAmount returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasTransAmount() bool {
	if o != nil && !utils.IsNil(o.TransAmount) {
		return true
	}

	return false
}

// SetTransAmount gets a reference to the given Money and assigns it to the TransAmount field.
func (o *QueryPaymentResponse) SetTransAmount(v Money) {

	o.TransAmount = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetAmount() Money {
	if o == nil || utils.IsNil(o.Amount) {
		var ret Money
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetAmountOk() (*Money, bool) {
	if o == nil || utils.IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasAmount() bool {
	if o != nil && !utils.IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given Money and assigns it to the Amount field.
func (o *QueryPaymentResponse) SetAmount(v Money) {

	o.Amount = &v
}

// GetFeeAmount returns the FeeAmount field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetFeeAmount() Money {
	if o == nil || utils.IsNil(o.FeeAmount) {
		var ret Money
		return ret
	}
	return *o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetFeeAmountOk() (*Money, bool) {
	if o == nil || utils.IsNil(o.FeeAmount) {
		return nil, false
	}
	return o.FeeAmount, true
}

// HasFeeAmount returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasFeeAmount() bool {
	if o != nil && !utils.IsNil(o.FeeAmount) {
		return true
	}

	return false
}

// SetFeeAmount gets a reference to the given Money and assigns it to the FeeAmount field.
func (o *QueryPaymentResponse) SetFeeAmount(v Money) {

	o.FeeAmount = &v
}

// GetPaidTime returns the PaidTime field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetPaidTime() string {
	if o == nil || utils.IsNil(o.PaidTime) {
		var ret string
		return ret
	}
	return *o.PaidTime
}

// GetPaidTimeOk returns a tuple with the PaidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetPaidTimeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PaidTime) {
		return nil, false
	}
	return o.PaidTime, true
}

// HasPaidTime returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasPaidTime() bool {
	if o != nil && !utils.IsNil(o.PaidTime) {
		return true
	}

	return false
}

// SetPaidTime gets a reference to the given string and assigns it to the PaidTime field.
func (o *QueryPaymentResponse) SetPaidTime(v string) {

	o.PaidTime = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetTitle() string {
	if o == nil || utils.IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetTitleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasTitle() bool {
	if o != nil && !utils.IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *QueryPaymentResponse) SetTitle(v string) {

	o.Title = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *QueryPaymentResponse) GetAdditionalInfo() QueryPaymentResponseAdditionalInfo {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		var ret QueryPaymentResponseAdditionalInfo
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPaymentResponse) GetAdditionalInfoOk() (*QueryPaymentResponseAdditionalInfo, bool) {
	if o == nil || utils.IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *QueryPaymentResponse) HasAdditionalInfo() bool {
	if o != nil && !utils.IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given QueryPaymentResponseAdditionalInfo and assigns it to the AdditionalInfo field.
func (o *QueryPaymentResponse) SetAdditionalInfo(v QueryPaymentResponseAdditionalInfo) {

	o.AdditionalInfo = &v
}

func (o QueryPaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryPaymentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseCode"] = o.ResponseCode
	toSerialize["responseMessage"] = o.ResponseMessage
	if !utils.IsNil(o.OriginalPartnerReferenceNo) {
		toSerialize["originalPartnerReferenceNo"] = o.OriginalPartnerReferenceNo
	}
	if !utils.IsNil(o.OriginalReferenceNo) {
		toSerialize["originalReferenceNo"] = o.OriginalReferenceNo
	}
	if !utils.IsNil(o.OriginalExternalId) {
		toSerialize["originalExternalId"] = o.OriginalExternalId
	}
	toSerialize["serviceCode"] = o.ServiceCode
	toSerialize["latestTransactionStatus"] = o.LatestTransactionStatus
	if !utils.IsNil(o.TransactionStatusDesc) {
		toSerialize["transactionStatusDesc"] = o.TransactionStatusDesc
	}
	if !utils.IsNil(o.OriginalResponseCode) {
		toSerialize["originalResponseCode"] = o.OriginalResponseCode
	}
	if !utils.IsNil(o.OriginalResponseMessage) {
		toSerialize["originalResponseMessage"] = o.OriginalResponseMessage
	}
	if !utils.IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !utils.IsNil(o.RequestID) {
		toSerialize["requestID"] = o.RequestID
	}
	if !utils.IsNil(o.TransAmount) {
		toSerialize["transAmount"] = o.TransAmount
	}
	if !utils.IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !utils.IsNil(o.FeeAmount) {
		toSerialize["feeAmount"] = o.FeeAmount
	}
	if !utils.IsNil(o.PaidTime) {
		toSerialize["paidTime"] = o.PaidTime
	}
	if !utils.IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !utils.IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

func (o *QueryPaymentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responseCode",
		"responseMessage",
		"serviceCode",
		"latestTransactionStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryPaymentResponse := _QueryPaymentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryPaymentResponse)

	if err != nil {
		return err
	}

	*o = QueryPaymentResponse(varQueryPaymentResponse)

	return err
}

type NullableQueryPaymentResponse struct {
	value *QueryPaymentResponse
	isSet bool
}

func (v NullableQueryPaymentResponse) Get() *QueryPaymentResponse {
	return v.value
}

func (v *NullableQueryPaymentResponse) Set(val *QueryPaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryPaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryPaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryPaymentResponse(val *QueryPaymentResponse) *NullableQueryPaymentResponse {
	return &NullableQueryPaymentResponse{value: val, isSet: true}
}

func (v NullableQueryPaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryPaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


