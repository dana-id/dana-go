// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package payment_gateway

/*
Payment Gateway API

API for doing operations in DANA Payment Gateway (Gapura)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the PayOptionAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PayOptionAdditionalInfo{}

// PayOptionAdditionalInfo struct for PayOptionAdditionalInfo
type PayOptionAdditionalInfo struct {
	// User's phone number
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Payment code that used for payment with virtual account
	PaymentCode *string `json:"paymentCode,omitempty"`
	PromoInfos []PromoInfo `json:"promoInfos,omitempty"`
}

// NewPayOptionAdditionalInfo instantiates a new PayOptionAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayOptionAdditionalInfo() *PayOptionAdditionalInfo {
	this := PayOptionAdditionalInfo{}
	return &this
}

// NewPayOptionAdditionalInfoWithDefaults instantiates a new PayOptionAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayOptionAdditionalInfoWithDefaults() *PayOptionAdditionalInfo {
	this := PayOptionAdditionalInfo{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *PayOptionAdditionalInfo) GetPhoneNumber() string {
	if o == nil || utils.IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionAdditionalInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PayOptionAdditionalInfo) HasPhoneNumber() bool {
	if o != nil && !utils.IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *PayOptionAdditionalInfo) SetPhoneNumber(v string) {

	o.PhoneNumber = &v
}

// GetPaymentCode returns the PaymentCode field value if set, zero value otherwise.
func (o *PayOptionAdditionalInfo) GetPaymentCode() string {
	if o == nil || utils.IsNil(o.PaymentCode) {
		var ret string
		return ret
	}
	return *o.PaymentCode
}

// GetPaymentCodeOk returns a tuple with the PaymentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionAdditionalInfo) GetPaymentCodeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PaymentCode) {
		return nil, false
	}
	return o.PaymentCode, true
}

// HasPaymentCode returns a boolean if a field has been set.
func (o *PayOptionAdditionalInfo) HasPaymentCode() bool {
	if o != nil && !utils.IsNil(o.PaymentCode) {
		return true
	}

	return false
}

// SetPaymentCode gets a reference to the given string and assigns it to the PaymentCode field.
func (o *PayOptionAdditionalInfo) SetPaymentCode(v string) {

	o.PaymentCode = &v
}

// GetPromoInfos returns the PromoInfos field value if set, zero value otherwise.
func (o *PayOptionAdditionalInfo) GetPromoInfos() []PromoInfo {
	if o == nil || utils.IsNil(o.PromoInfos) {
		var ret []PromoInfo
		return ret
	}
	return o.PromoInfos
}

// GetPromoInfosOk returns a tuple with the PromoInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOptionAdditionalInfo) GetPromoInfosOk() ([]PromoInfo, bool) {
	if o == nil || utils.IsNil(o.PromoInfos) {
		return nil, false
	}
	return o.PromoInfos, true
}

// HasPromoInfos returns a boolean if a field has been set.
func (o *PayOptionAdditionalInfo) HasPromoInfos() bool {
	if o != nil && !utils.IsNil(o.PromoInfos) {
		return true
	}

	return false
}

// SetPromoInfos gets a reference to the given []PromoInfo and assigns it to the PromoInfos field.
func (o *PayOptionAdditionalInfo) SetPromoInfos(v []PromoInfo) {

	o.PromoInfos = v
}

func (o PayOptionAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayOptionAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !utils.IsNil(o.PaymentCode) {
		toSerialize["paymentCode"] = o.PaymentCode
	}
	if !utils.IsNil(o.PromoInfos) {
		toSerialize["promoInfos"] = o.PromoInfos
	}
	return toSerialize, nil
}

type NullablePayOptionAdditionalInfo struct {
	value *PayOptionAdditionalInfo
	isSet bool
}

func (v NullablePayOptionAdditionalInfo) Get() *PayOptionAdditionalInfo {
	return v.value
}

func (v *NullablePayOptionAdditionalInfo) Set(val *PayOptionAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePayOptionAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePayOptionAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayOptionAdditionalInfo(val *PayOptionAdditionalInfo) *NullablePayOptionAdditionalInfo {
	return &NullablePayOptionAdditionalInfo{value: val, isSet: true}
}

func (v NullablePayOptionAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayOptionAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


