// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merchant_management

/*
Merchant Management API

API for merchant management operations in DANA

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the CreateDivisionRequestExtInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateDivisionRequestExtInfo{}

// CreateDivisionRequestExtInfo Extended information
type CreateDivisionRequestExtInfo struct {
	// PIC email address
	PIC_EMAIL *string `json:"PIC_EMAIL,omitempty"`
	// PIC phone number
	PIC_PHONENUMBER *string `json:"PIC_PHONENUMBER,omitempty"`
	// Submitter email address
	SUBMITTER_EMAIL *string `json:"SUBMITTER_EMAIL,omitempty"`
	// Type of goods sold
	GOODS_SOLD_TYPE *string `json:"GOODS_SOLD_TYPE,omitempty"`
	// Use case type
	USECASE *string `json:"USECASE,omitempty"`
	// User profiling type
	USER_PROFILING *string `json:"USER_PROFILING,omitempty"`
	// Average ticket size
	AVG_TICKET *string `json:"AVG_TICKET,omitempty"`
	// Revenue range
	OMZET *string `json:"OMZET,omitempty"`
	// External URLs
	EXT_URLS *string `json:"EXT_URLS,omitempty"`
	// Brand name
	BRAND_NAME *string `json:"BRAND_NAME,omitempty"`
}

// NewCreateDivisionRequestExtInfo instantiates a new CreateDivisionRequestExtInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDivisionRequestExtInfo() *CreateDivisionRequestExtInfo {
	this := CreateDivisionRequestExtInfo{}
	return &this
}

// NewCreateDivisionRequestExtInfoWithDefaults instantiates a new CreateDivisionRequestExtInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDivisionRequestExtInfoWithDefaults() *CreateDivisionRequestExtInfo {
	this := CreateDivisionRequestExtInfo{}
	return &this
}

// GetPIC_EMAIL returns the PIC_EMAIL field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetPIC_EMAIL() string {
	if o == nil || utils.IsNil(o.PIC_EMAIL) {
		var ret string
		return ret
	}
	return *o.PIC_EMAIL
}

// GetPIC_EMAILOk returns a tuple with the PIC_EMAIL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetPIC_EMAILOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PIC_EMAIL) {
		return nil, false
	}
	return o.PIC_EMAIL, true
}

// HasPIC_EMAIL returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasPIC_EMAIL() bool {
	if o != nil && !utils.IsNil(o.PIC_EMAIL) {
		return true
	}

	return false
}

// SetPIC_EMAIL gets a reference to the given string and assigns it to the PIC_EMAIL field.
func (o *CreateDivisionRequestExtInfo) SetPIC_EMAIL(v string) {
	o.PIC_EMAIL = &v
}

// GetPIC_PHONENUMBER returns the PIC_PHONENUMBER field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetPIC_PHONENUMBER() string {
	if o == nil || utils.IsNil(o.PIC_PHONENUMBER) {
		var ret string
		return ret
	}
	return *o.PIC_PHONENUMBER
}

// GetPIC_PHONENUMBEROk returns a tuple with the PIC_PHONENUMBER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetPIC_PHONENUMBEROk() (*string, bool) {
	if o == nil || utils.IsNil(o.PIC_PHONENUMBER) {
		return nil, false
	}
	return o.PIC_PHONENUMBER, true
}

// HasPIC_PHONENUMBER returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasPIC_PHONENUMBER() bool {
	if o != nil && !utils.IsNil(o.PIC_PHONENUMBER) {
		return true
	}

	return false
}

// SetPIC_PHONENUMBER gets a reference to the given string and assigns it to the PIC_PHONENUMBER field.
func (o *CreateDivisionRequestExtInfo) SetPIC_PHONENUMBER(v string) {
	o.PIC_PHONENUMBER = &v
}

// GetSUBMITTER_EMAIL returns the SUBMITTER_EMAIL field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetSUBMITTER_EMAIL() string {
	if o == nil || utils.IsNil(o.SUBMITTER_EMAIL) {
		var ret string
		return ret
	}
	return *o.SUBMITTER_EMAIL
}

// GetSUBMITTER_EMAILOk returns a tuple with the SUBMITTER_EMAIL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetSUBMITTER_EMAILOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SUBMITTER_EMAIL) {
		return nil, false
	}
	return o.SUBMITTER_EMAIL, true
}

// HasSUBMITTER_EMAIL returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasSUBMITTER_EMAIL() bool {
	if o != nil && !utils.IsNil(o.SUBMITTER_EMAIL) {
		return true
	}

	return false
}

// SetSUBMITTER_EMAIL gets a reference to the given string and assigns it to the SUBMITTER_EMAIL field.
func (o *CreateDivisionRequestExtInfo) SetSUBMITTER_EMAIL(v string) {
	o.SUBMITTER_EMAIL = &v
}

// GetGOODS_SOLD_TYPE returns the GOODS_SOLD_TYPE field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetGOODS_SOLD_TYPE() string {
	if o == nil || utils.IsNil(o.GOODS_SOLD_TYPE) {
		var ret string
		return ret
	}
	return *o.GOODS_SOLD_TYPE
}

// GetGOODS_SOLD_TYPEOk returns a tuple with the GOODS_SOLD_TYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetGOODS_SOLD_TYPEOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GOODS_SOLD_TYPE) {
		return nil, false
	}
	return o.GOODS_SOLD_TYPE, true
}

// HasGOODS_SOLD_TYPE returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasGOODS_SOLD_TYPE() bool {
	if o != nil && !utils.IsNil(o.GOODS_SOLD_TYPE) {
		return true
	}

	return false
}

// SetGOODS_SOLD_TYPE gets a reference to the given string and assigns it to the GOODS_SOLD_TYPE field.
func (o *CreateDivisionRequestExtInfo) SetGOODS_SOLD_TYPE(v string) {
	o.GOODS_SOLD_TYPE = &v
}

// GetUSECASE returns the USECASE field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetUSECASE() string {
	if o == nil || utils.IsNil(o.USECASE) {
		var ret string
		return ret
	}
	return *o.USECASE
}

// GetUSECASEOk returns a tuple with the USECASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetUSECASEOk() (*string, bool) {
	if o == nil || utils.IsNil(o.USECASE) {
		return nil, false
	}
	return o.USECASE, true
}

// HasUSECASE returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasUSECASE() bool {
	if o != nil && !utils.IsNil(o.USECASE) {
		return true
	}

	return false
}

// SetUSECASE gets a reference to the given string and assigns it to the USECASE field.
func (o *CreateDivisionRequestExtInfo) SetUSECASE(v string) {
	o.USECASE = &v
}

// GetUSER_PROFILING returns the USER_PROFILING field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetUSER_PROFILING() string {
	if o == nil || utils.IsNil(o.USER_PROFILING) {
		var ret string
		return ret
	}
	return *o.USER_PROFILING
}

// GetUSER_PROFILINGOk returns a tuple with the USER_PROFILING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetUSER_PROFILINGOk() (*string, bool) {
	if o == nil || utils.IsNil(o.USER_PROFILING) {
		return nil, false
	}
	return o.USER_PROFILING, true
}

// HasUSER_PROFILING returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasUSER_PROFILING() bool {
	if o != nil && !utils.IsNil(o.USER_PROFILING) {
		return true
	}

	return false
}

// SetUSER_PROFILING gets a reference to the given string and assigns it to the USER_PROFILING field.
func (o *CreateDivisionRequestExtInfo) SetUSER_PROFILING(v string) {
	o.USER_PROFILING = &v
}

// GetAVG_TICKET returns the AVG_TICKET field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetAVG_TICKET() string {
	if o == nil || utils.IsNil(o.AVG_TICKET) {
		var ret string
		return ret
	}
	return *o.AVG_TICKET
}

// GetAVG_TICKETOk returns a tuple with the AVG_TICKET field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetAVG_TICKETOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AVG_TICKET) {
		return nil, false
	}
	return o.AVG_TICKET, true
}

// HasAVG_TICKET returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasAVG_TICKET() bool {
	if o != nil && !utils.IsNil(o.AVG_TICKET) {
		return true
	}

	return false
}

// SetAVG_TICKET gets a reference to the given string and assigns it to the AVG_TICKET field.
func (o *CreateDivisionRequestExtInfo) SetAVG_TICKET(v string) {
	o.AVG_TICKET = &v
}

// GetOMZET returns the OMZET field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetOMZET() string {
	if o == nil || utils.IsNil(o.OMZET) {
		var ret string
		return ret
	}
	return *o.OMZET
}

// GetOMZETOk returns a tuple with the OMZET field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetOMZETOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OMZET) {
		return nil, false
	}
	return o.OMZET, true
}

// HasOMZET returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasOMZET() bool {
	if o != nil && !utils.IsNil(o.OMZET) {
		return true
	}

	return false
}

// SetOMZET gets a reference to the given string and assigns it to the OMZET field.
func (o *CreateDivisionRequestExtInfo) SetOMZET(v string) {
	o.OMZET = &v
}

// GetEXT_URLS returns the EXT_URLS field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetEXT_URLS() string {
	if o == nil || utils.IsNil(o.EXT_URLS) {
		var ret string
		return ret
	}
	return *o.EXT_URLS
}

// GetEXT_URLSOk returns a tuple with the EXT_URLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetEXT_URLSOk() (*string, bool) {
	if o == nil || utils.IsNil(o.EXT_URLS) {
		return nil, false
	}
	return o.EXT_URLS, true
}

// HasEXT_URLS returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasEXT_URLS() bool {
	if o != nil && !utils.IsNil(o.EXT_URLS) {
		return true
	}

	return false
}

// SetEXT_URLS gets a reference to the given string and assigns it to the EXT_URLS field.
func (o *CreateDivisionRequestExtInfo) SetEXT_URLS(v string) {
	o.EXT_URLS = &v
}

// GetBRAND_NAME returns the BRAND_NAME field value if set, zero value otherwise.
func (o *CreateDivisionRequestExtInfo) GetBRAND_NAME() string {
	if o == nil || utils.IsNil(o.BRAND_NAME) {
		var ret string
		return ret
	}
	return *o.BRAND_NAME
}

// GetBRAND_NAMEOk returns a tuple with the BRAND_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDivisionRequestExtInfo) GetBRAND_NAMEOk() (*string, bool) {
	if o == nil || utils.IsNil(o.BRAND_NAME) {
		return nil, false
	}
	return o.BRAND_NAME, true
}

// HasBRAND_NAME returns a boolean if a field has been set.
func (o *CreateDivisionRequestExtInfo) HasBRAND_NAME() bool {
	if o != nil && !utils.IsNil(o.BRAND_NAME) {
		return true
	}

	return false
}

// SetBRAND_NAME gets a reference to the given string and assigns it to the BRAND_NAME field.
func (o *CreateDivisionRequestExtInfo) SetBRAND_NAME(v string) {
	o.BRAND_NAME = &v
}

func (o CreateDivisionRequestExtInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDivisionRequestExtInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PIC_EMAIL) {
		toSerialize["PIC_EMAIL"] = o.PIC_EMAIL
	}
	if !utils.IsNil(o.PIC_PHONENUMBER) {
		toSerialize["PIC_PHONENUMBER"] = o.PIC_PHONENUMBER
	}
	if !utils.IsNil(o.SUBMITTER_EMAIL) {
		toSerialize["SUBMITTER_EMAIL"] = o.SUBMITTER_EMAIL
	}
	if !utils.IsNil(o.GOODS_SOLD_TYPE) {
		toSerialize["GOODS_SOLD_TYPE"] = o.GOODS_SOLD_TYPE
	}
	if !utils.IsNil(o.USECASE) {
		toSerialize["USECASE"] = o.USECASE
	}
	if !utils.IsNil(o.USER_PROFILING) {
		toSerialize["USER_PROFILING"] = o.USER_PROFILING
	}
	if !utils.IsNil(o.AVG_TICKET) {
		toSerialize["AVG_TICKET"] = o.AVG_TICKET
	}
	if !utils.IsNil(o.OMZET) {
		toSerialize["OMZET"] = o.OMZET
	}
	if !utils.IsNil(o.EXT_URLS) {
		toSerialize["EXT_URLS"] = o.EXT_URLS
	}
	if !utils.IsNil(o.BRAND_NAME) {
		toSerialize["BRAND_NAME"] = o.BRAND_NAME
	}
	return toSerialize, nil
}

type NullableCreateDivisionRequestExtInfo struct {
	value *CreateDivisionRequestExtInfo
	isSet bool
}

func (v NullableCreateDivisionRequestExtInfo) Get() *CreateDivisionRequestExtInfo {
	return v.value
}

func (v *NullableCreateDivisionRequestExtInfo) Set(val *CreateDivisionRequestExtInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDivisionRequestExtInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDivisionRequestExtInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDivisionRequestExtInfo(val *CreateDivisionRequestExtInfo) *NullableCreateDivisionRequestExtInfo {
	return &NullableCreateDivisionRequestExtInfo{value: val, isSet: true}
}

func (v NullableCreateDivisionRequestExtInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDivisionRequestExtInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


