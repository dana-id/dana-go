// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merchant_management

/*
Merchant Management API

API for merchant management operations in DANA

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the QueryShopRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &QueryShopRequest{}

// QueryShopRequest struct for QueryShopRequest
type QueryShopRequest struct {
	// Merchant identifier. Required when shopIdType is EXTERNAL_ID
	MerchantId *string `json:"merchantId,omitempty"`
	// Shop identifier. Length depends on shopIdType - INNER_ID (21 max), EXTERNAL_ID (64 max)
	ShopId string `json:"shopId"`
	// Shop identifier type
	ShopIdType string `json:"shopIdType"`
}

type _QueryShopRequest QueryShopRequest

// NewQueryShopRequest instantiates a new QueryShopRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryShopRequest(shopId string, shopIdType string) *QueryShopRequest {
	this := QueryShopRequest{}
	this.ShopId = shopId
	this.ShopIdType = shopIdType
	return &this
}

// NewQueryShopRequestWithDefaults instantiates a new QueryShopRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryShopRequestWithDefaults() *QueryShopRequest {
	this := QueryShopRequest{}
	return &this
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *QueryShopRequest) GetMerchantId() string {
	if o == nil || utils.IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryShopRequest) GetMerchantIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *QueryShopRequest) HasMerchantId() bool {
	if o != nil && !utils.IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *QueryShopRequest) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetShopId returns the ShopId field value
func (o *QueryShopRequest) GetShopId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value
// and a boolean to check if the value has been set.
func (o *QueryShopRequest) GetShopIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShopId, true
}

// SetShopId sets field value
func (o *QueryShopRequest) SetShopId(v string) {
	o.ShopId = v
}

// GetShopIdType returns the ShopIdType field value
func (o *QueryShopRequest) GetShopIdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShopIdType
}

// GetShopIdTypeOk returns a tuple with the ShopIdType field value
// and a boolean to check if the value has been set.
func (o *QueryShopRequest) GetShopIdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShopIdType, true
}

// SetShopIdType sets field value
func (o *QueryShopRequest) SetShopIdType(v string) {
	o.ShopIdType = v
}

func (o QueryShopRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryShopRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	toSerialize["shopId"] = o.ShopId
	toSerialize["shopIdType"] = o.ShopIdType
	return toSerialize, nil
}

func (o *QueryShopRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shopId",
		"shopIdType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryShopRequest := _QueryShopRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryShopRequest)

	if err != nil {
		return err
	}

	*o = QueryShopRequest(varQueryShopRequest)

	return err
}

type NullableQueryShopRequest struct {
	value *QueryShopRequest
	isSet bool
}

func (v NullableQueryShopRequest) Get() *QueryShopRequest {
	return v.value
}

func (v *NullableQueryShopRequest) Set(val *QueryShopRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryShopRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryShopRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryShopRequest(val *QueryShopRequest) *NullableQueryShopRequest {
	return &NullableQueryShopRequest{value: val, isSet: true}
}

func (v NullableQueryShopRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryShopRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


