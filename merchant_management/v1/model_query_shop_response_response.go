// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merchant_management

/*
Merchant Management API

API for merchant management operations in DANA

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"bytes"
	"fmt"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the QueryShopResponseResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &QueryShopResponseResponse{}

// QueryShopResponseResponse struct for QueryShopResponseResponse
type QueryShopResponseResponse struct {
	Head QueryShopResponseResponseHead `json:"head"`
	Body QueryShopResponseResponseBody `json:"body"`
}

type _QueryShopResponseResponse QueryShopResponseResponse

// NewQueryShopResponseResponse instantiates a new QueryShopResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryShopResponseResponse(head QueryShopResponseResponseHead, body QueryShopResponseResponseBody) *QueryShopResponseResponse {
	this := QueryShopResponseResponse{}
	this.Head = head
	this.Body = body
	return &this
}

// NewQueryShopResponseResponseWithDefaults instantiates a new QueryShopResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryShopResponseResponseWithDefaults() *QueryShopResponseResponse {
	this := QueryShopResponseResponse{}
	return &this
}

// GetHead returns the Head field value
func (o *QueryShopResponseResponse) GetHead() QueryShopResponseResponseHead {
	if o == nil {
		var ret QueryShopResponseResponseHead
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *QueryShopResponseResponse) GetHeadOk() (*QueryShopResponseResponseHead, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *QueryShopResponseResponse) SetHead(v QueryShopResponseResponseHead) {
	o.Head = v
}

// GetBody returns the Body field value
func (o *QueryShopResponseResponse) GetBody() QueryShopResponseResponseBody {
	if o == nil {
		var ret QueryShopResponseResponseBody
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *QueryShopResponseResponse) GetBodyOk() (*QueryShopResponseResponseBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *QueryShopResponseResponse) SetBody(v QueryShopResponseResponseBody) {
	o.Body = v
}

func (o QueryShopResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryShopResponseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["head"] = o.Head
	toSerialize["body"] = o.Body
	return toSerialize, nil
}

func (o *QueryShopResponseResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"head",
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryShopResponseResponse := _QueryShopResponseResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryShopResponseResponse)

	if err != nil {
		return err
	}

	*o = QueryShopResponseResponse(varQueryShopResponseResponse)

	return err
}

type NullableQueryShopResponseResponse struct {
	value *QueryShopResponseResponse
	isSet bool
}

func (v NullableQueryShopResponseResponse) Get() *QueryShopResponseResponse {
	return v.value
}

func (v *NullableQueryShopResponseResponse) Set(val *QueryShopResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryShopResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryShopResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryShopResponseResponse(val *QueryShopResponseResponse) *NullableQueryShopResponseResponse {
	return &NullableQueryShopResponseResponse{value: val, isSet: true}
}

func (v NullableQueryShopResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryShopResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


