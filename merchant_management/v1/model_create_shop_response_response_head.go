// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merchant_management

/*
Merchant Management API

API for merchant management operations in DANA

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the CreateShopResponseResponseHead type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CreateShopResponseResponseHead{}

// CreateShopResponseResponseHead struct for CreateShopResponseResponseHead
type CreateShopResponseResponseHead struct {
	// API version
	Version *string `json:"version,omitempty"`
	// API interface
	Function *string `json:"function,omitempty"`
	// Client ID provided by DANA, used to identify partner and application system
	ClientId *string `json:"clientId,omitempty"`
	// DateTime with timezone, which follows the ISO-8601 standard. Refer to RFC 3339 Section 5.6
	RespTime *string `json:"respTime,omitempty"`
	// Request message ID
	ReqMsgId *string `json:"reqMsgId,omitempty"`
}

// NewCreateShopResponseResponseHead instantiates a new CreateShopResponseResponseHead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateShopResponseResponseHead() *CreateShopResponseResponseHead {
	this := CreateShopResponseResponseHead{}
	var version string = "2.0"
	this.Version = &version
	return &this
}

// NewCreateShopResponseResponseHeadWithDefaults instantiates a new CreateShopResponseResponseHead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateShopResponseResponseHeadWithDefaults() *CreateShopResponseResponseHead {
	this := CreateShopResponseResponseHead{}
	var version string = "2.0"
	this.Version = &version
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateShopResponseResponseHead) GetVersion() string {
	if o == nil || utils.IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShopResponseResponseHead) GetVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateShopResponseResponseHead) HasVersion() bool {
	if o != nil && !utils.IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CreateShopResponseResponseHead) SetVersion(v string) {
	o.Version = &v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *CreateShopResponseResponseHead) GetFunction() string {
	if o == nil || utils.IsNil(o.Function) {
		var ret string
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShopResponseResponseHead) GetFunctionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *CreateShopResponseResponseHead) HasFunction() bool {
	if o != nil && !utils.IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given string and assigns it to the Function field.
func (o *CreateShopResponseResponseHead) SetFunction(v string) {
	o.Function = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CreateShopResponseResponseHead) GetClientId() string {
	if o == nil || utils.IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShopResponseResponseHead) GetClientIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CreateShopResponseResponseHead) HasClientId() bool {
	if o != nil && !utils.IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CreateShopResponseResponseHead) SetClientId(v string) {
	o.ClientId = &v
}

// GetRespTime returns the RespTime field value if set, zero value otherwise.
func (o *CreateShopResponseResponseHead) GetRespTime() string {
	if o == nil || utils.IsNil(o.RespTime) {
		var ret string
		return ret
	}
	return *o.RespTime
}

// GetRespTimeOk returns a tuple with the RespTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShopResponseResponseHead) GetRespTimeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RespTime) {
		return nil, false
	}
	return o.RespTime, true
}

// HasRespTime returns a boolean if a field has been set.
func (o *CreateShopResponseResponseHead) HasRespTime() bool {
	if o != nil && !utils.IsNil(o.RespTime) {
		return true
	}

	return false
}

// SetRespTime gets a reference to the given string and assigns it to the RespTime field.
func (o *CreateShopResponseResponseHead) SetRespTime(v string) {
	o.RespTime = &v
}

// GetReqMsgId returns the ReqMsgId field value if set, zero value otherwise.
func (o *CreateShopResponseResponseHead) GetReqMsgId() string {
	if o == nil || utils.IsNil(o.ReqMsgId) {
		var ret string
		return ret
	}
	return *o.ReqMsgId
}

// GetReqMsgIdOk returns a tuple with the ReqMsgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShopResponseResponseHead) GetReqMsgIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReqMsgId) {
		return nil, false
	}
	return o.ReqMsgId, true
}

// HasReqMsgId returns a boolean if a field has been set.
func (o *CreateShopResponseResponseHead) HasReqMsgId() bool {
	if o != nil && !utils.IsNil(o.ReqMsgId) {
		return true
	}

	return false
}

// SetReqMsgId gets a reference to the given string and assigns it to the ReqMsgId field.
func (o *CreateShopResponseResponseHead) SetReqMsgId(v string) {
	o.ReqMsgId = &v
}

func (o CreateShopResponseResponseHead) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateShopResponseResponseHead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !utils.IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	if !utils.IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !utils.IsNil(o.RespTime) {
		toSerialize["respTime"] = o.RespTime
	}
	if !utils.IsNil(o.ReqMsgId) {
		toSerialize["reqMsgId"] = o.ReqMsgId
	}
	return toSerialize, nil
}

type NullableCreateShopResponseResponseHead struct {
	value *CreateShopResponseResponseHead
	isSet bool
}

func (v NullableCreateShopResponseResponseHead) Get() *CreateShopResponseResponseHead {
	return v.value
}

func (v *NullableCreateShopResponseResponseHead) Set(val *CreateShopResponseResponseHead) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateShopResponseResponseHead) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateShopResponseResponseHead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateShopResponseResponseHead(val *CreateShopResponseResponseHead) *NullableCreateShopResponseResponseHead {
	return &NullableCreateShopResponseResponseHead{value: val, isSet: true}
}

func (v NullableCreateShopResponseResponseHead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateShopResponseResponseHead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


