// Copyright 2025 PT Espay Debit Indonesia Koe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merchant_management

/*
Merchant Management API

API for merchant management operations in DANA

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	utils "github.com/dana-id/dana-go/utils"
)

// checks if the MobileNoInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MobileNoInfo{}

// MobileNoInfo struct for MobileNoInfo
type MobileNoInfo struct {
	// Mobile number. Accepted formats: 0xxxxxxxx, 62xxxxxxx, 62-xxxxxxx, +62xxxxxx
	MobileNo *string `json:"mobileNo,omitempty"`
	// Mobile ID
	MobileId *string `json:"mobileId,omitempty"`
	// Verification status
	Verified *string `json:"verified,omitempty"`
}

// NewMobileNoInfo instantiates a new MobileNoInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileNoInfo() *MobileNoInfo {
	this := MobileNoInfo{}
	return &this
}

// NewMobileNoInfoWithDefaults instantiates a new MobileNoInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileNoInfoWithDefaults() *MobileNoInfo {
	this := MobileNoInfo{}
	return &this
}

// GetMobileNo returns the MobileNo field value if set, zero value otherwise.
func (o *MobileNoInfo) GetMobileNo() string {
	if o == nil || utils.IsNil(o.MobileNo) {
		var ret string
		return ret
	}
	return *o.MobileNo
}

// GetMobileNoOk returns a tuple with the MobileNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNoInfo) GetMobileNoOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MobileNo) {
		return nil, false
	}
	return o.MobileNo, true
}

// HasMobileNo returns a boolean if a field has been set.
func (o *MobileNoInfo) HasMobileNo() bool {
	if o != nil && !utils.IsNil(o.MobileNo) {
		return true
	}

	return false
}

// SetMobileNo gets a reference to the given string and assigns it to the MobileNo field.
func (o *MobileNoInfo) SetMobileNo(v string) {
	o.MobileNo = &v
}

// GetMobileId returns the MobileId field value if set, zero value otherwise.
func (o *MobileNoInfo) GetMobileId() string {
	if o == nil || utils.IsNil(o.MobileId) {
		var ret string
		return ret
	}
	return *o.MobileId
}

// GetMobileIdOk returns a tuple with the MobileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNoInfo) GetMobileIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MobileId) {
		return nil, false
	}
	return o.MobileId, true
}

// HasMobileId returns a boolean if a field has been set.
func (o *MobileNoInfo) HasMobileId() bool {
	if o != nil && !utils.IsNil(o.MobileId) {
		return true
	}

	return false
}

// SetMobileId gets a reference to the given string and assigns it to the MobileId field.
func (o *MobileNoInfo) SetMobileId(v string) {
	o.MobileId = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *MobileNoInfo) GetVerified() string {
	if o == nil || utils.IsNil(o.Verified) {
		var ret string
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNoInfo) GetVerifiedOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *MobileNoInfo) HasVerified() bool {
	if o != nil && !utils.IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given string and assigns it to the Verified field.
func (o *MobileNoInfo) SetVerified(v string) {
	o.Verified = &v
}

func (o MobileNoInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileNoInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.MobileNo) {
		toSerialize["mobileNo"] = o.MobileNo
	}
	if !utils.IsNil(o.MobileId) {
		toSerialize["mobileId"] = o.MobileId
	}
	if !utils.IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableMobileNoInfo struct {
	value *MobileNoInfo
	isSet bool
}

func (v NullableMobileNoInfo) Get() *MobileNoInfo {
	return v.value
}

func (v *NullableMobileNoInfo) Set(val *MobileNoInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileNoInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileNoInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileNoInfo(val *MobileNoInfo) *NullableMobileNoInfo {
	return &NullableMobileNoInfo{value: val, isSet: true}
}

func (v NullableMobileNoInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileNoInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


